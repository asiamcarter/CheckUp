{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/symptoms/TrackChoice.js\";\nimport React, { Component } from \"react\";\nimport \"./Symptoms.css\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar TrackChoice =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TrackChoice, _Component);\n\n  function TrackChoice() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TrackChoice);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TrackChoice)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      symptoms: [],\n      modal: false\n    };\n\n    _this.toggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TrackChoice, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"nav\", {\n        className: \"navbar fixed-top navbar-light light-blue flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"nav nav-pulls nav-fill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"TRACK\")))), React.createElement(\"div\", {\n        className: \"symptom-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"symptom-question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"What symptoms would you like to track?\"), React.createElement(\"div\", {\n        className: \"symptom-name-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-group my-list-group left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-group-item\",\n        id: \"nausea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/symptoms/Nausea/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"nausea-h1\",\n        id: \"nausea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Nausea\"))), React.createElement(\"div\", {\n        className: \"list-group-item\",\n        id: \"weight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/symptoms/Weight/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"weight-h1\",\n        id: \"weight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Weight\")))), React.createElement(\"div\", {\n        className: \"list-group my-list-group right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-group-item\",\n        id: \"pain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/symptoms/Pain/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"pain-h1\",\n        id: \"pain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Pain\"))), React.createElement(\"div\", {\n        className: \"list-group-item\",\n        id: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"none\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" \", this.props.buttonLabel, React.createElement(\"h1\", {\n        className: \"add-h1\",\n        id: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"+\")), React.createElement(\"div\", {\n        className: \"centerModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.modal,\n        className: \"modal-sm modalSize\",\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"You're All Set!\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"We recommend that you check-in daily\"), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.addNewSymptom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Cancel\"))))))));\n    }\n  }]);\n\n  return TrackChoice;\n}(Component);\n\nexport { TrackChoice as default };\n{\n  /* <Button color=\"danger\" onClick={this.toggle}>{this.props.buttonLabel}\n                 Add\n         </Button>\n              <div className=\"centerModal\">\n                 <Modal isOpen={this.state.modal} className=\"modal-sm modalSize\" toggle={this.toggle} >\n                 <ModalHeader toggle={this.toggle}>You're All Set!</ModalHeader>\n                 <ModalBody >\n                 We recommend that you check-in daily\n                 </ModalBody>\n                 <ModalFooter>\n                     <Button color=\"primary\" onClick={this.addNewSymptom}>Save</Button>{' '}\n                     <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                 </ModalFooter>\n                 </Modal> */\n}","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/symptoms/TrackChoice.js"],"names":["React","Component","Link","Button","Modal","ModalHeader","ModalBody","ModalFooter","TrackChoice","state","symptoms","modal","toggle","setState","prevState","props","buttonLabel","addNewSymptom"],"mappings":"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","sourcesContent":["import React, { Component} from \"react\"\nimport \"./Symptoms.css\"\nimport {Link} from \"react-router-dom\"\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport default class TrackChoice extends Component {\n    state = {\n        symptoms: [],\n        modal: false\n    }\n\n    toggle= () => {\n        this.setState(prevState => ({\n          modal: !prevState.modal\n        }));\n      }\n\n    render() {\n        return (\n            <>\n             <nav className=\"navbar fixed-top navbar-light light-blue flex-md-nowrap p-0 shadow\">\n                    <div className=\"container\">\n                        <ul className=\"nav nav-pulls nav-fill\">\n                            <li className=\"nav-item\">\n                                TRACK\n                            </li>\n                        </ul>\n                    </div>\n               </nav>\n            <div className=\"symptom-container\">\n            <h5 className=\"symptom-question\">What symptoms would you like to track?</h5>\n            <div className=\"symptom-name-container\">\n            </div></div>\n\n            <div className=\"container\">\n                <div className=\"list-group my-list-group left\">\n                    <div className=\"list-group-item\" id=\"nausea\">\n                        <Link to={\"/symptoms/Nausea/new\"}>\n                            <h1 className=\"nausea-h1\" id=\"nausea\">\n                                Nausea\n                            </h1>\n                        </Link>\n                    </div>\n                    <div className=\"list-group-item\" id=\"weight\">\n                    <Link to={\"/symptoms/Weight/new\"}>\n                            <h1 className=\"weight-h1\" id=\"weight\">\n                                Weight\n                            </h1>\n                        </Link>\n                    </div>\n                 </div>\n                    <div className=\"list-group my-list-group right\">\n                    <div className=\"list-group-item\" id=\"pain\">\n                    <Link to={\"/symptoms/Pain/new\"}>\n                            <h1 className=\"pain-h1\" id=\"pain\">\n                               Pain\n                            </h1>\n                        </Link>\n                    </div>\n                    <div className=\"list-group-item\" id=\"add\">\n                    <Button color=\"none\" onClick={this.toggle}> {this.props.buttonLabel}\n                             <h1 className=\"add-h1\" id=\"add\">\n                                +\n                            </h1>\n                        </Button>\n                        <div className=\"centerModal\">\n                <Modal isOpen={this.state.modal} className=\"modal-sm modalSize\" toggle={this.toggle} >\n                <ModalHeader toggle={this.toggle}>You're All Set!</ModalHeader>\n                <ModalBody >\n                We recommend that you check-in daily\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={this.addNewSymptom}>Save</Button>{' '}\n                    <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                </ModalFooter>\n                </Modal>\n                </div>\n                    </div>\n                </div>\n                </div>\n\n        </>\n        )\n    }\n}\n\n{/* <Button color=\"danger\" onClick={this.toggle}>{this.props.buttonLabel}\n                Add\n        </Button>\n\n            <div className=\"centerModal\">\n                <Modal isOpen={this.state.modal} className=\"modal-sm modalSize\" toggle={this.toggle} >\n                <ModalHeader toggle={this.toggle}>You're All Set!</ModalHeader>\n                <ModalBody >\n                We recommend that you check-in daily\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={this.addNewSymptom}>Save</Button>{' '}\n                    <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                </ModalFooter>\n                </Modal> */}"]},"metadata":{},"sourceType":"module"}