{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from \"react\";\n\nvar NewSymptomForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewSymptomForm, _Component);\n\n  function NewSymptomForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewSymptomForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewSymptomForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      intensity: \"\",\n      date: \"\",\n      time: \"\",\n      notes: \"\",\n      userId: \"\"\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.addNewTask = function (evt) {\n      evt.preventDefault();\n      var d = new Date();\n      var day = d.getDate();\n      var year = d.getFullYear();\n      var month = d.getMonth() + 1;\n      var hours = d.getHours() - 12;\n      var minutes = d.getMinutes();\n      var symptom = {\n        name: _this.state.name,\n        intensity: _this.state.intensity,\n        date: \"\".concat(month, \"/\").concat(day, \"/\").concat(year),\n        time: \"\".concat(hours, \":\").concat(minutes),\n        notes: _this.state.notes,\n        userId: Number(sessionStorage.getItem(\"User\"))\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(NewSymptomForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, \"It's working!\");\n    }\n  }]);\n\n  return NewSymptomForm;\n}(Component);\n\nexport { NewSymptomForm as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/symptoms/NewSymptomForm.js"],"names":["React","Component","NewSymptomForm","state","name","intensity","date","time","notes","userId","handleFieldChange","evt","stateToChange","target","id","value","setState","addNewTask","preventDefault","d","Date","day","getDate","year","getFullYear","month","getMonth","hours","getHours","minutes","getMinutes","symptom","Number","sessionStorage","getItem"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,c;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,IAAI,EAAE,EAJF;AAKJC,MAAAA,KAAK,EAAE,EALH;AAMJC,MAAAA,MAAM,EAAE;AANJ,K;;UASRC,iB,GAAoB,UAAAC,GAAG,EAAI;AACvB,UAAMC,aAAa,GAAC,EAApB;AACAA,MAAAA,aAAa,CAACD,GAAG,CAACE,MAAJ,CAAWC,EAAZ,CAAb,GAA+BH,GAAG,CAACE,MAAJ,CAAWE,KAA1C;;AACA,YAAKC,QAAL,CAAcJ,aAAd;AACH,K;;UAEDK,U,GAAa,UAAAN,GAAG,EAAI;AAChBA,MAAAA,GAAG,CAACO,cAAJ;AACA,UAAIC,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACA,UAAIC,GAAG,GAAGF,CAAC,CAACG,OAAF,EAAV;AACA,UAAIC,IAAI,GAAGJ,CAAC,CAACK,WAAF,EAAX;AACA,UAAIC,KAAK,GAAIN,CAAC,CAACO,QAAF,KAAe,CAA5B;AACA,UAAIC,KAAK,GAAIR,CAAC,CAACS,QAAF,KAAa,EAA1B;AACA,UAAIC,OAAO,GAAGV,CAAC,CAACW,UAAF,EAAd;AACA,UAAMC,OAAO,GAAG;AACZ3B,QAAAA,IAAI,EAAE,MAAKD,KAAL,CAAWC,IADL;AAEZC,QAAAA,SAAS,EAAE,MAAKF,KAAL,CAAWE,SAFV;AAGZC,QAAAA,IAAI,YAAKmB,KAAL,cAAcJ,GAAd,cAAqBE,IAArB,CAHQ;AAIZhB,QAAAA,IAAI,YAAKoB,KAAL,cAAcE,OAAd,CAJQ;AAKZrB,QAAAA,KAAK,EAAE,MAAKL,KAAL,CAAWK,KALN;AAMZC,QAAAA,MAAM,EAAEuB,MAAM,CAACC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAD;AANF,OAAhB;AAQH,K;;;;;;;6BACQ;AACL,aACI,0DADJ;AAKH;;;;EAvCuCjC,S;;SAAvBC,c","sourcesContent":["import React, { Component } from \"react\"\n\nexport default class NewSymptomForm extends Component {\n    state = {\n        name: \"\",\n        intensity: \"\",\n        date: \"\",\n        time: \"\",\n        notes: \"\",\n        userId: \"\"\n    }\n\n    handleFieldChange = evt => {\n        const stateToChange={};\n        stateToChange[evt.target.id] = evt.target.value;\n        this.setState(stateToChange);\n    }\n\n    addNewTask = evt => {\n        evt.preventDefault();\n        let d = new Date();\n        let day = d.getDate();\n        let year = d.getFullYear();\n        let month = (d.getMonth() + 1);\n        let hours = (d.getHours()-12)\n        let minutes = d.getMinutes()\n        const symptom = {\n            name: this.state.name,\n            intensity: this.state.intensity,\n            date: `${month}/${day}/${year}`,\n            time: `${hours}:${minutes}`,\n            notes: this.state.notes,\n            userId: Number(sessionStorage.getItem(\"User\"))\n        }\n    }\n    render() {\n        return (\n            <>\n            It's working!\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}