{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/appointments/EditAppointmentForm.js\";\nimport React, { Component } from \"react\";\nimport DataManager from \"../../modules/DataManager\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar EditAppointmentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditAppointmentForm, _Component);\n\n  function EditAppointmentForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditAppointmentForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditAppointmentForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userId: \"\",\n      doctorId: \"\",\n      time: \"\",\n      date: \"\",\n      reason: \"\",\n      note: \"\",\n      timestamp: \"\",\n      audio: \"\",\n      photo: \"\"\n    };\n\n    _this.getDoctors = function () {\n      var doctors = _this.props.allDoctors.map(function (doctor) {\n        var doctorId = JSON.parse(doctor.id);\n\n        if (doctor.userId === Number(sessionStorage.getItem(\"User\"))) {\n          return React.createElement(\"option\", {\n            key: doctorId,\n            value: doctor.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, doctor.name);\n        }\n\n        return doctors;\n      });\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.editAppointment = function (evt) {\n      evt.preventDefault();\n      var newAppointmentObject = {\n        userId: _this.state.userId,\n        doctorId: _this.state.doctorId,\n        time: _this.state.time,\n        date: _this.state.date,\n        reason: _this.state.reason,\n        note: _this.state.note,\n        timestamp: new Date(),\n        audio: _this.state.audio,\n        photo: _this.state.photo,\n        id: _this.state.id\n      };\n\n      _this.props.editAppointment(_this.props.match.params.id, newAppointmentObject).then(function () {\n        return _this.props.history.push(\"/appointments\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EditAppointmentForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      DataManager.getById(this.props.match.params.id, \"appointments\").then(function (appointment) {\n        console.log(\"appointment\", appointment);\n\n        _this2.setState({\n          userId: appointment.userId,\n          doctorId: appointment.doctorId,\n          time: appointment.time,\n          date: appointment.date,\n          reason: appointment.reason,\n          note: appointment.note,\n          timestamp: appointment.timestamp,\n          audio: appointment.audio,\n          photo: appointment.photo,\n          id: appointment.id\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Edit Appointment\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"doctor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Doctor\"), React.createElement(\"select\", {\n        id: \"doctorId\",\n        required: true,\n        onChange: this.handleIdFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.getDoctors())), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"input\", {\n        type: \"time\",\n        onChange: this.handleFieldChange,\n        id: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"input\", {\n        type: \"date\",\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"reason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Reason\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleFieldChange,\n        id: \"reason\",\n        placeholder: this.state.reason,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.editAppointment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return EditAppointmentForm;\n}(Component);\n\nexport { EditAppointmentForm as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/appointments/EditAppointmentForm.js"],"names":["React","Component","DataManager","Button","Modal","ModalHeader","ModalBody","ModalFooter","EditAppointmentForm","state","userId","doctorId","time","date","reason","note","timestamp","audio","photo","getDoctors","doctors","props","allDoctors","map","doctor","JSON","parse","id","Number","sessionStorage","getItem","name","handleFieldChange","evt","stateToChange","target","value","setState","editAppointment","preventDefault","newAppointmentObject","Date","match","params","then","history","push","getById","appointment","console","log","handleIdFieldChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport DataManager from \"../../modules/DataManager\"\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport default class EditAppointmentForm extends Component {\n    state = {\n        userId: \"\",\n        doctorId: \"\",\n        time: \"\",\n        date: \"\",\n        reason: \"\",\n        note: \"\",\n        timestamp: \"\",\n        audio: \"\",\n        photo: \"\"\n    }\n\n    componentDidMount() {\n        DataManager.getById(this.props.match.params.id, \"appointments\").then(appointment => {\n            console.log(\"appointment\", appointment)\n            this.setState({\n                userId: appointment.userId,\n                doctorId: appointment.doctorId,\n                time: appointment.time,\n                date: appointment.date,\n                reason: appointment.reason,\n                note: appointment.note,\n                timestamp: appointment.timestamp,\n                audio: appointment.audio,\n                photo: appointment.photo,\n                id: appointment.id\n            })\n        })\n    }\n\n    getDoctors = () => {\n        let doctors = this.props.allDoctors.map(doctor => {\n            let doctorId = JSON.parse(doctor.id)\n            if (doctor.userId === Number(sessionStorage.getItem(\"User\"))){\n            return (\n                  <option key={doctorId} value={doctor.id}>{doctor.name}</option>\n\n            )\n            }\n            return doctors\n        })\n\n\n    }\n\n    handleFieldChange = evt => {\n        const stateToChange = {};\n        stateToChange[evt.target.id] = evt.target.value;\n        this.setState(stateToChange);\n    }\n    editAppointment = evt => {\n        evt.preventDefault();\n        const newAppointmentObject = {\n            userId: this.state.userId,\n            doctorId: this.state.doctorId,\n            time: this.state.time,\n            date: this.state.date,\n            reason: this.state.reason,\n            note: this.state.note,\n            timestamp: new Date(),\n            audio: this.state.audio,\n            photo: this.state.photo,\n            id: this.state.id\n        }\n         this.props.editAppointment(this.props.match.params.id, newAppointmentObject)\n         .then(()=> this.props.history.push(`/appointments`))\n    }\n\n    render() {\n        return (\n            <>\n             <form>\n\n<h2>Edit Appointment</h2>\n<div>\n    <label htmlFor=\"doctor\">Doctor</label>\n    <select id=\"doctorId\" required onChange={this.handleIdFieldChange}>\n        {this.getDoctors()}\n    </select>\n</div>\n{/* <div>\n    <label htmlFor=\"location\">Location</label>\n    <input type=\"text\" onChange={this.handleFieldChange} id=\"location\" />\n</div> */}\n<div>\n    <label htmlFor=\"time\">Time</label>\n    <input type=\"time\" onChange={this.handleFieldChange} id=\"time\" />\n</div>\n<div>\n    <label htmlFor=\"date\">Date</label>\n    <input type=\"date\" onChange={this.handleFieldChange} id=\"date\" />\n</div>\n<div>\n    <label htmlFor=\"reason\">Reason</label>\n    <input type=\"text\" onChange={this.handleFieldChange} id=\"reason\" placeholder={this.state.reason} />\n</div>\n\n<button type=\"submit\" onClick={this.editAppointment} >\n    Add</button>\n</form>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}