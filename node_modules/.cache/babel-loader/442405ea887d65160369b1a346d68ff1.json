{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/ApplicationViews.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./nav/NavBar\";\nimport { Route } from \"react-router-dom\"; // import { Redirect } from \"react-router-dom\"\n\nimport SymptomList from \"./symptoms/SymptomList\"; // import Login from \"./login/Login\"\n// import Register from \"./login/Register\"\n\nimport DataManager from \"../modules/DataManager\"; // import TrackNavBar from \"./nav/TrackNavBar\"\n\nvar ApplicationViews =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ApplicationViews, _Component);\n\n  function ApplicationViews() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ApplicationViews);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ApplicationViews)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      users: [],\n      symptoms: [],\n      medications: [],\n      appointments: [],\n      notes: [],\n      doctors: [] //    test() {\n      //     DataManager.getAll(\"users\").then(allUsers => console.log(allUsers))}\n\n    };\n\n    _this.isAuthenticated = function () {\n      return sessionStorage.getItem(\"User\") !== null;\n    };\n\n    return _this;\n  }\n\n  _createClass(ApplicationViews, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      DataManager.getAll(\"users\").then(function (allUsers) {\n        _this2.setState({\n          users: allUsers\n        });\n      }).then(function () {\n        return DataManager.getAll(\"symptoms\");\n      }).then(function (allSymptoms) {\n        _this2.setState({\n          symptoms: allSymptoms\n        });\n      }).then(function () {\n        return DataManager.getAll(\"medications\");\n      }).then(function (allMedications) {\n        _this2.setState({\n          medications: allMedications\n        });\n      }).then(function () {\n        return DataManager.getAll(\"appointments\");\n      }).then(function (allAppointments) {\n        _this2.setState({\n          appointments: allAppointments\n        });\n      }).then(function () {\n        return DataManager.getAll(\"notes\");\n      }).then(function (allNotes) {\n        _this2.setState({\n          notes: allNotes\n        });\n      }).then(function () {\n        return DataManager.getAll(\"doctors\");\n      }).then(function (allDoctors) {\n        _this2.setState({\n          doctors: allDoctors\n        });\n      }).then(function () {\n        console.log(\"componentDidMount:\", _this2.state);\n      }); // this.test()\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/track\",\n        render: function render(props) {\n          return React.createElement(SymptomList, Object.assign({}, props, {\n            symptoms: _this3.props.symptoms,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ApplicationViews;\n}(Component);\n\nexport { ApplicationViews as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/ApplicationViews.js"],"names":["React","Component","NavBar","Route","SymptomList","DataManager","ApplicationViews","state","users","symptoms","medications","appointments","notes","doctors","isAuthenticated","sessionStorage","getItem","getAll","then","allUsers","setState","allSymptoms","allMedications","allAppointments","allNotes","allDoctors","console","log","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport NavBar from \"./nav/NavBar\"\nimport { Route } from \"react-router-dom\"\n// import { Redirect } from \"react-router-dom\"\nimport SymptomList from \"./symptoms/SymptomList\"\n// import Login from \"./login/Login\"\n// import Register from \"./login/Register\"\nimport DataManager from \"../modules/DataManager\"\n// import TrackNavBar from \"./nav/TrackNavBar\"\n\nexport default class ApplicationViews extends\nComponent {\n\n    state= {\n        users: [],\n        symptoms: [],\n        medications: [],\n        appointments: [],\n        notes: [],\n        doctors: []\n\n    }\n\n//    test() {\n//     DataManager.getAll(\"users\").then(allUsers => console.log(allUsers))}\n\n    componentDidMount() {\n        DataManager.getAll(\"users\").then(allUsers => {this.setState({users:allUsers})})\n        .then(()=> DataManager.getAll(\"symptoms\")).then(allSymptoms => {this.setState({symptoms:allSymptoms})})\n        .then(() => DataManager.getAll(\"medications\")).then(allMedications => {this.setState ({medications: allMedications})})\n        .then(() => DataManager.getAll(\"appointments\")).then(allAppointments => {this.setState({appointments: allAppointments})})\n        .then(()=> DataManager.getAll(\"notes\")).then(allNotes => {this.setState({notes: allNotes})})\n        .then(()=> DataManager.getAll(\"doctors\")).then(allDoctors => {this.setState({doctors:allDoctors})})\n        .then(()=> {console.log(\"componentDidMount:\", this.state)})\n\n        // this.test()\n    }\n\n    isAuthenticated = () => sessionStorage.getItem(\"User\") !== null\n\n\n\n\n    render() {\n        return (\n            <>\n                <NavBar />\n                <Route exact path=\"/track\" render={(props) => {\n                    return <SymptomList {...props} symptoms={this.props.symptoms} />\n                }} />\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}