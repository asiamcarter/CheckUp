{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/medications/MedicationList.js\";\n//Component is responsible for rendering medicaton cards\nimport React, { Component } from \"react\";\nimport MedicationCard from \"./MedicationCard\";\nimport pillicon from \"../../images/medications/pills.png\";\nimport \"./Medications.css\";\nimport { Button } from 'reactstrap';\n\nvar MedicationList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MedicationList, _Component);\n\n  function MedicationList() {\n    _classCallCheck(this, MedicationList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MedicationList).apply(this, arguments));\n  }\n\n  _createClass(MedicationList, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      // console.log(\"MED PROPS\", this.props)\n      var sortedMeds = this.props.medications.sort(function (medA, medB) {\n        return parseInt(medA.time) - parseInt(medB.time);\n      });\n      return React.createElement(React.Fragment, null, React.createElement(\"nav\", {\n        className: \"navbar sticky-top flex-md-nowrap p-0 shadow \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"nav nav-pills nav-fill homepage-top-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"MEDICATION LIST\")))), React.createElement(\"div\", {\n        className: \"medicationList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: pillicon,\n        alt: \"pill icon\",\n        width: \"60px\",\n        height: \"60px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Tracked Medications\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        className: \"medication-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Morning\", sortedMeds.map(function (medication) {\n        return medication.time === \"7:00\" | \"8:00\" | \"9:00\" | \"10:00\" | \"11:00\" ? React.createElement(MedicationCard, Object.assign({\n          key: medication.id,\n          medication: medication\n        }, _this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        })) : \"\";\n      })), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Afternoon\", sortedMeds.map(function (medication) {\n        return medication.time === \"12:00\" | \"13:00\" | \"14:00\" | \"15:00\" | \"16:00\" | \"17:00\" ? React.createElement(MedicationCard, Object.assign({\n          key: medication.id,\n          medication: medication\n        }, _this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        })) : \"\";\n      })), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Evening\", sortedMeds.map(function (medication) {\n        return medication.time === \"18:00\" | \"19:00\" | \"20:00\" | \"21:00\" | \"22:00\" | \"23:00\" | \"24:00\" ? React.createElement(MedicationCard, Object.assign({\n          key: medication.id,\n          medication: medication\n        }, _this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        })) : \"\";\n      }))), React.createElement(Button, {\n        color: \"success\",\n        type: \"submit\",\n        id: \"add-medication-button\",\n        onClick: function onClick() {\n          _this.props.history.push(\"/medications/new\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Add\"));\n    }\n  }]);\n\n  return MedicationList;\n}(Component);\n\nexport { MedicationList as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/medications/MedicationList.js"],"names":["React","Component","MedicationCard","pillicon","Button","MedicationList","sortedMeds","props","medications","sort","medA","medB","parseInt","time","map","medication","id","history","push"],"mappings":"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","sourcesContent":["//Component is responsible for rendering medicaton cards\n\nimport React, { Component } from \"react\"\nimport MedicationCard from \"./MedicationCard\"\nimport pillicon from \"../../images/medications/pills.png\"\nimport \"./Medications.css\"\nimport { Button } from 'reactstrap';\n\n\n\nexport default class MedicationList extends Component {\n\n    render() {\n        // console.log(\"MED PROPS\", this.props)\n        const sortedMeds = this.props.medications.sort(function (medA, medB) {\n            return parseInt(medA.time) - parseInt(medB.time)\n        })\n\n        return (\n            <>\n            <nav className=\"navbar sticky-top flex-md-nowrap p-0 shadow \">\n                <div className=\"container\">\n                    <ul className=\"nav nav-pills nav-fill homepage-top-nav\">\n                        <li className=\"nav-item\">\n                            MEDICATION LIST\n                        </li>\n                        </ul>\n\n                </div>\n                </nav>\n                <div className=\"medicationList\">\n                    <img src={pillicon} alt=\"pill icon\" width=\"60px\" height=\"60px\"/>\n                    <h2>Tracked Medications</h2>\n                    <hr />\n\n                </div>\n                <section className=\"medication-list\">\n                    <section>Morning\n                    {sortedMeds.map(medication => (\n                        medication.time=== \"7:00\" | \"8:00\"| \"9:00\"|\"10:00\" | \"11:00\" ?\n                        <MedicationCard key={medication.id} medication={medication} {...this.props} /> : \"\"\n                    ))}\n                    </section>\n                    <section>Afternoon\n                    {sortedMeds.map(medication => (\n                        medication.time===\"12:00\"|\"13:00\"|\"14:00\"|\"15:00\"|\"16:00\"|\"17:00\" ?\n                        <MedicationCard key={medication.id} medication={medication} {...this.props} /> : \"\"\n                    ))}\n                    </section>\n                    <section>Evening\n                    {sortedMeds.map(medication => (\n                        medication.time===\"18:00\"|\"19:00\"|\"20:00\"|\"21:00\"|\"22:00\"|\"23:00\"|\"24:00\" ?\n                        <MedicationCard key={medication.id} medication={medication} {...this.props} /> : \"\"\n                    ))}\n                    </section>\n                </section>\n                <Button color=\"success\" type=\"submit\" id=\"add-medication-button\" onClick={() => { this.props.history.push(\"/medications/new\") }} >\n                        Add\n            </Button>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}