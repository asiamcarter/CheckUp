{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/ApplicationViews.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./nav/NavBar\";\nimport { Route } from \"react-router-dom\"; // import { Redirect } from \"react-router-dom\"\n\nimport SymptomList from \"./symptoms/SymptomList\";\nimport Login from \"./login/Login\";\nimport Register from \"./login/Register\";\nimport DataManager from \"../modules/DataManager\"; // import TrackNavBar from \"./nav/TrackNavBar\"\n\nimport Homepage from \"./homepage/Homepage\";\nimport NewSymptomForm from \"./symptoms/NewSymptomForm\";\nimport MedicationList from \"./medications/MedicationList\";\nimport NewMedicationForm from \"./medications/NewMedicationForm\";\nimport EditMedicationForm from \"./medications/EditMedicationForm\";\nimport AppointmentList from \"./appointments/AppointmentList\";\nimport NewAppointmentForm from \"./appointments/NewAppointmentForm\";\nimport NewDoctorForm from \"./doctors/NewDoctorForm\";\nimport NewNoteForm from \"./notes/NewNoteForm\";\nimport NoteCard from \"./notes/NoteCard\";\nimport EditNoteForm from \"./notes/EditNoteForm\";\nimport EditAppointmentForm from \"./appointments/EditAppointmentForm\";\nimport TrackChoice from \"./symptoms/TrackChoice\";\nimport { Button } from 'reactstrap';\n\nvar ApplicationViews =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ApplicationViews, _Component);\n\n  function ApplicationViews() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ApplicationViews);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ApplicationViews)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      users: [],\n      symptoms: [],\n      medications: [],\n      appointments: [],\n      notes: [],\n      doctors: [],\n      trackedSymptoms: []\n    };\n\n    _this.isAuthenticated = function () {\n      return sessionStorage.getItem(\"User\") !== null;\n    };\n\n    _this.addSymptom = function (newSymptom) {\n      return DataManager.postSymptom(newSymptom).then(function () {\n        DataManager.getAll(\"symptoms\").then(function (allSymptoms) {\n          return _this.setState({\n            symptoms: allSymptoms\n          });\n        });\n      });\n    };\n\n    _this.addTrackedSymptom = function (newTrackedSymptom) {\n      return DataManager.postTrackedSymptom(newTrackedSymptom).then(function () {\n        return DataManager.getAll(\"trackedSymptoms\");\n      }).then(function (allTrackedSymptoms) {\n        _this.setState({\n          trackedSymptoms: allTrackedSymptoms\n        });\n      });\n    };\n\n    _this.deleteSymptom = function (id) {\n      return DataManager.delete(id, \"symptoms\").then(function () {\n        DataManager.getAll(\"symptoms\").then(function (allSymptoms) {\n          _this.setState({\n            symptoms: allSymptoms\n          });\n        });\n      });\n    };\n\n    _this.deleteTrackedSymptom = function (id) {\n      return DataManager.delete(id, \"trackedSymptoms\").then(function () {\n        DataManager.getAll(\"trackedSymptoms\").then(function (allSymptoms) {\n          _this.setState({\n            trackedSymptoms: allSymptoms\n          });\n        });\n      });\n    };\n\n    _this.addMedication = function (newMedication) {\n      return DataManager.postMedicaton(newMedication).then(function () {\n        DataManager.getAll(\"medications\").then(function (allMedications) {\n          return _this.setState({\n            medications: allMedications\n          });\n        });\n      });\n    };\n\n    _this.deleteMedication = function (id) {\n      return DataManager.delete(id, \"medications\").then(function () {\n        DataManager.getAll(\"medications\").then(function (allMedications) {\n          _this.setState({\n            medications: allMedications\n          });\n        });\n      });\n    };\n\n    _this.editMedication = function (id, newMedicationObject) {\n      return DataManager.putMedication(id, newMedicationObject).then(function () {\n        DataManager.getAll(\"medications\").then(function (allMedication) {\n          return _this.setState({\n            medications: allMedication\n          });\n        });\n      });\n    };\n\n    _this.deleteAppointment = function (id) {\n      return DataManager.delete(id, \"appointments\").then(function () {\n        DataManager.getAll(\"appointments\").then(function (allAppointments) {\n          _this.setState({\n            appointments: allAppointments\n          });\n        });\n      });\n    };\n\n    _this.addAppointment = function (newAppointment) {\n      return DataManager.postAppointment(newAppointment).then(function () {\n        DataManager.getAptDoc().then(function (allAppointments) {\n          return _this.setState({\n            appointments: allAppointments\n          });\n        });\n      });\n    };\n\n    _this.editAppointment = function (id, newObject) {\n      return DataManager.putAppointment(id, newObject).then(function () {\n        DataManager.getAptDoc().then(function (allAppointments) {\n          return _this.setState({\n            appointments: allAppointments\n          });\n        });\n      });\n    };\n\n    _this.postNewDoctor = function (newDoctor) {\n      return DataManager.postNewDoctor(newDoctor).then(function () {\n        DataManager.getAll(\"doctors\").then(function (allDoctors) {\n          return _this.setState({\n            doctors: allDoctors\n          });\n        });\n      });\n    };\n\n    _this.getAppointmentNotes = function (appointmentId) {\n      return DataManager.getAppointmentNotes(appointmentId);\n    };\n\n    _this.postNewNote = function (newNote) {\n      return DataManager.postNewNote(newNote).then(function () {\n        DataManager.getAll(\"notes\").then(function (allNotes) {\n          return _this.setState({\n            notes: allNotes\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ApplicationViews, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var newState = {};\n      DataManager.getAllUserInfo().then(function (allUsers) {\n        return newState.users = allUsers;\n      }).then(function () {\n        return DataManager.getAll(\"symptoms\");\n      }).then(function (allSymptoms) {\n        return newState.symptoms = allSymptoms;\n      }).then(function () {\n        return DataManager.getAll(\"medications\");\n      }).then(function (allMedications) {\n        return newState.medications = allMedications;\n      }).then(function () {\n        return DataManager.getAptDoc();\n      }).then(function (allAppointments) {\n        return newState.appointments = allAppointments;\n      }) // .then(() => DataManager.getAll(\"notes\")).then(allNotes => newState.notes = allNotes)\n      .then(function () {\n        return DataManager.getAll(\"doctors\");\n      }).then(function (allDoctors) {\n        return newState.doctors = allDoctors;\n      }).then(function () {\n        return DataManager.getAll(\"trackedSymptoms\").then(function (allSymptoms) {\n          return newState.trackedSymptoms = allSymptoms;\n        });\n      }).then(function () {\n        return _this2.setState(newState);\n      }).then(function () {\n        console.log(\"COMPONENTDIDMOUNT:\", _this2.state);\n      });\n    } //authentication\n\n  }, {\n    key: \"showNav\",\n    value: function showNav() {\n      if (this.isAuthenticated()) {\n        return React.createElement(NavBar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      }\n    } //login/registration\n\n  }, {\n    key: \"registerUser\",\n    value: function registerUser(username, password) {\n      DataManager.getUsers(username, password);\n    }\n  }, {\n    key: \"getUsers\",\n    value: function getUsers() {\n      return DataManager.getAll(\"users\");\n    }\n  }, {\n    key: \"postUser\",\n    value: function postUser(newUser) {\n      return DataManager.postUser(newUser).then(function () {\n        return DataManager.getAll(\"users\");\n      });\n    }\n  }, {\n    key: \"checkForUser\",\n    value: function checkForUser(email, password) {\n      return DataManager.checkForUser(email, password);\n    } //symptoms\n\n  }, {\n    key: \"getAllSymptoms\",\n    value: function getAllSymptoms() {\n      DataManager.getAll(\"symptoms\");\n    }\n  }, {\n    key: \"getAllTrackedSymptoms\",\n    value: function getAllTrackedSymptoms() {\n      return DataManager.getAll(\"trackedSymptoms\");\n    } //medications\n\n  }, {\n    key: \"getAllMedications\",\n    value: function getAllMedications() {\n      DataManager.getAll(\"medications\");\n    }\n  }, {\n    key: \"getAllAppointments\",\n    value: function getAllAppointments() {\n      return DataManager.getAllAptNotes();\n    }\n  }, {\n    key: \"getAptDocs\",\n    value: function getAptDocs() {\n      return DataManager.getAptDoc();\n    }\n  }, {\n    key: \"getAllDoctors\",\n    value: function getAllDoctors() {\n      return DataManager.getAll(\"doctors\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // console.log(\"ApplicationViewsState\", this.state.appointments)\n      // console.log(\"APPVIEWS STATE\", this.state)\n      return React.createElement(React.Fragment, null, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(Login, Object.assign({}, props, {\n            checkForUser: _this3.checkForUser,\n            users: _this3.state.users,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), this.showNav(), React.createElement(Route, {\n        exact: true,\n        path: \"/register\",\n        render: function render(props) {\n          return React.createElement(Register, Object.assign({}, props, {\n            getUsers: _this3.getUsers,\n            postUser: _this3.postUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/home\",\n        render: function render(props) {\n          return React.createElement(Homepage, Object.assign({}, props, {\n            users: _this3.state.users,\n            appointments: _this3.state.appointments,\n            doctors: _this3.getAptDocs(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/track\",\n        render: function render(props) {\n          return React.createElement(TrackChoice, Object.assign({}, props, {\n            symptoms: _this3.state.symptoms,\n            addTrackedSymptom: _this3.addTrackedSymptom,\n            deleteSymptom: _this3.deleteTrackedSymptom,\n            getAll: _this3.getAllSymptoms,\n            trackedSymptoms: _this3.state.trackedSymptoms,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/trackedsymptoms\",\n        render: function render(props) {\n          return React.createElement(SymptomList, Object.assign({}, props, {\n            symptoms: _this3.state.symptoms,\n            addSymptom: _this3.addSymptom,\n            deleteSymptom: _this3.deleteSymptom,\n            getAll: _this3.getAllTrackedSymptoms,\n            trackedSymptoms: _this3.state.trackedSymptoms,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/symptoms/:symptomId/new\",\n        render: function render(props) {\n          return React.createElement(NewSymptomForm, Object.assign({}, props, {\n            symptoms: _this3.state.symptoms,\n            addSymptom: _this3.addSymptom,\n            getAll: _this3.getAllSymptoms,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/meds\",\n        render: function render(props) {\n          return React.createElement(MedicationList, Object.assign({}, props, {\n            medications: _this3.state.medications,\n            addMedication: _this3.addMedication,\n            deleteMedication: _this3.deleteMedication,\n            getAll: _this3.getAllMedications,\n            editMedication: _this3.editMedication,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/medications/new\",\n        render: function render(props) {\n          return React.createElement(NewMedicationForm, Object.assign({}, props, {\n            medications: _this3.state.medications,\n            addMedication: _this3.addMedication,\n            getAll: _this3.getAllMedications,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/meds/editmedication/:id\",\n        render: function render(props) {\n          return React.createElement(EditMedicationForm, Object.assign({}, props, {\n            medications: _this3.state.medications,\n            editMedication: _this3.editMedication,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/appointments\",\n        render: function render(props) {\n          return React.createElement(AppointmentList, Object.assign({}, props, {\n            addAppointment: _this3.addAppointment,\n            appointments: _this3.state.appointments,\n            editAppointment: _this3.editAppointment,\n            getAptNotes: _this3.getAllAppointments,\n            getAptDocs: _this3.getAptDocs,\n            getAllDoctors: _this3.componentDidMount,\n            getAppointmentNotes: _this3.getAppointmentNotes,\n            doctors: _this3.state.doctors,\n            postNewDoctor: _this3.postNewDoctor,\n            allDoctors: _this3.state.doctors,\n            deleteAppointment: _this3.deleteAppointment,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/appointment/new\",\n        render: function render(props) {\n          return React.createElement(NewAppointmentForm, Object.assign({}, props, {\n            appointments: _this3.state.appointments,\n            addAppointment: _this3.addAppointment,\n            getAptNotes: _this3.getAllAppointments,\n            allDoctors: _this3.state.doctors,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/doctor/new\",\n        render: function render(props) {\n          return React.createElement(NewDoctorForm, Object.assign({}, props, {\n            doctors: _this3.state.doctors,\n            postNewDoctor: _this3.postNewDoctor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/appointment/newnote/:id\",\n        render: function render(props) {\n          return React.createElement(NewNoteForm, Object.assign({}, props, {\n            appointments: _this3.state.appointments,\n            editAppointment: _this3.editAppointment,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 283\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/note/:id\",\n        render: function render(props) {\n          return React.createElement(NoteCard, Object.assign({}, props, {\n            appointments: _this3.state.appointments,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/note/edit/:id\",\n        render: function render(props) {\n          return React.createElement(EditNoteForm, Object.assign({}, props, {\n            appointments: _this3.state.appointments,\n            editAppointment: _this3.editAppointment,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/appointments/edit/:id\",\n        render: function render(props) {\n          return React.createElement(EditAppointmentForm, Object.assign({}, props, {\n            appointments: _this3.state.appointments,\n            editAppointment: _this3.editAppointment,\n            allDoctors: _this3.state.doctors,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ApplicationViews;\n}(Component);\n\nexport { ApplicationViews as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/ApplicationViews.js"],"names":["React","Component","NavBar","Route","SymptomList","Login","Register","DataManager","Homepage","NewSymptomForm","MedicationList","NewMedicationForm","EditMedicationForm","AppointmentList","NewAppointmentForm","NewDoctorForm","NewNoteForm","NoteCard","EditNoteForm","EditAppointmentForm","TrackChoice","Button","ApplicationViews","state","users","symptoms","medications","appointments","notes","doctors","trackedSymptoms","isAuthenticated","sessionStorage","getItem","addSymptom","newSymptom","postSymptom","then","getAll","allSymptoms","setState","addTrackedSymptom","newTrackedSymptom","postTrackedSymptom","allTrackedSymptoms","deleteSymptom","id","delete","deleteTrackedSymptom","addMedication","newMedication","postMedicaton","allMedications","deleteMedication","editMedication","newMedicationObject","putMedication","allMedication","deleteAppointment","allAppointments","addAppointment","newAppointment","postAppointment","getAptDoc","editAppointment","newObject","putAppointment","postNewDoctor","newDoctor","allDoctors","getAppointmentNotes","appointmentId","postNewNote","newNote","allNotes","newState","getAllUserInfo","allUsers","console","log","username","password","getUsers","newUser","postUser","email","checkForUser","getAllAptNotes","props","showNav","getAptDocs","getAllSymptoms","getAllTrackedSymptoms","getAllMedications","getAllAppointments","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport NavBar from \"./nav/NavBar\"\nimport { Route } from \"react-router-dom\"\n// import { Redirect } from \"react-router-dom\"\nimport SymptomList from \"./symptoms/SymptomList\"\nimport Login from \"./login/Login\"\nimport Register from \"./login/Register\"\nimport DataManager from \"../modules/DataManager\"\n// import TrackNavBar from \"./nav/TrackNavBar\"\nimport Homepage from \"./homepage/Homepage\"\nimport NewSymptomForm from \"./symptoms/NewSymptomForm\"\nimport MedicationList from \"./medications/MedicationList\"\nimport NewMedicationForm from \"./medications/NewMedicationForm\"\nimport EditMedicationForm from \"./medications/EditMedicationForm\"\nimport AppointmentList from \"./appointments/AppointmentList\"\nimport NewAppointmentForm from \"./appointments/NewAppointmentForm\"\nimport NewDoctorForm from \"./doctors/NewDoctorForm\"\nimport NewNoteForm from \"./notes/NewNoteForm\"\nimport NoteCard from \"./notes/NoteCard\"\nimport EditNoteForm from \"./notes/EditNoteForm\"\nimport EditAppointmentForm from \"./appointments/EditAppointmentForm\"\nimport TrackChoice from \"./symptoms/TrackChoice\"\nimport { Button } from 'reactstrap';\nexport default class ApplicationViews extends\n    Component {\n\n    state = {\n        users: [],\n        symptoms: [],\n        medications: [],\n        appointments: [],\n        notes: [],\n        doctors: [],\n        trackedSymptoms: []\n\n    }\n\n    componentDidMount() {\n        const newState = {}\n        DataManager.getAllUserInfo().then(allUsers => newState.users = allUsers)\n            .then(() => DataManager.getAll(\"symptoms\")).then(allSymptoms => newState.symptoms = allSymptoms)\n            .then(() => DataManager.getAll(\"medications\")).then(allMedications =>\n                newState.medications = allMedications)\n            .then(() => DataManager.getAptDoc()).then(allAppointments => newState.appointments = allAppointments)\n            // .then(() => DataManager.getAll(\"notes\")).then(allNotes => newState.notes = allNotes)\n            .then(() => DataManager.getAll(\"doctors\")).then(allDoctors => newState.doctors = allDoctors)\n            .then(()=> DataManager.getAll(\"trackedSymptoms\").then(allSymptoms =>\n                newState.trackedSymptoms = allSymptoms))\n            .then(() => this.setState(newState))\n            .then(() => { console.log(\"COMPONENTDIDMOUNT:\", this.state) })\n    }\n\n\n\n\n    //authentication\n    isAuthenticated = () => sessionStorage.getItem(\"User\") !== null\n    showNav() {\n        if (this.isAuthenticated()) {\n            return <NavBar />\n        }\n    }\n\n    //login/registration\n    registerUser(username, password) {\n        DataManager.getUsers(username, password)\n    }\n    getUsers() {\n        return DataManager.getAll(\"users\")\n    }\n    postUser(newUser) {\n        return DataManager.postUser(newUser).then(() => DataManager.getAll(\"users\"))\n    }\n    checkForUser(email, password) {\n        return DataManager.checkForUser(email, password)\n    }\n    //symptoms\n    addSymptom = (newSymptom) => {\n        return DataManager.postSymptom(newSymptom).then(() => {\n            DataManager.getAll(\"symptoms\")\n                .then(allSymptoms =>\n                    this.setState({\n                        symptoms: allSymptoms\n                    })\n                );\n        })\n    }\n\n    addTrackedSymptom = (newTrackedSymptom) => {\n        return DataManager.postTrackedSymptom(newTrackedSymptom)\n        .then(()=> DataManager.getAll(\"trackedSymptoms\"))\n        .then(allTrackedSymptoms => {\n            this.setState({trackedSymptoms: allTrackedSymptoms})\n        })\n    }\n    deleteSymptom = id => {\n        return DataManager.delete(id, \"symptoms\").then(() => {\n            DataManager.getAll(\"symptoms\")\n                .then(allSymptoms => {\n                    this.setState({\n                        symptoms: allSymptoms\n                    })\n\n                })\n        })\n    }\n    deleteTrackedSymptom = id => {\n        return DataManager.delete(id, \"trackedSymptoms\").then(() => {\n            DataManager.getAll(\"trackedSymptoms\")\n                .then(allSymptoms => {\n                    this.setState({\n                        trackedSymptoms: allSymptoms\n                    })\n\n                })\n        })\n    }\n    getAllSymptoms() {\n        DataManager.getAll(\"symptoms\")\n    }\n\n    getAllTrackedSymptoms() {\n       return DataManager.getAll(\"trackedSymptoms\")\n    }\n    //medications\n    getAllMedications() {\n        DataManager.getAll(\"medications\")\n    }\n    addMedication = (newMedication) => {\n        return DataManager.postMedicaton(newMedication).then(() => {\n            DataManager.getAll(\"medications\")\n                .then(allMedications => this.setState({\n                    medications: allMedications\n                }))\n        })\n    }\n\n    deleteMedication = id => {\n        return DataManager.delete(id, \"medications\").then(() => {\n            DataManager.getAll(\"medications\")\n                .then(allMedications => {\n                    this.setState({\n                        medications: allMedications\n                    })\n                })\n        })\n    }\n    editMedication = (id, newMedicationObject) => {\n        return DataManager.putMedication(id, newMedicationObject).then(() => {\n            DataManager.getAll(\"medications\").then(allMedication => this.setState({\n                medications: allMedication\n            }))\n        })\n    }\n\n    //appointments\n\n    deleteAppointment= id => {\n        return DataManager.delete(id, \"appointments\").then(() => {\n            DataManager.getAll(\"appointments\")\n                .then(allAppointments => {\n                    this.setState({\n                        appointments: allAppointments\n                    })\n\n                })\n        })\n    }\n\n    getAllAppointments() {\n        return DataManager.getAllAptNotes()\n    }\n\n    getAptDocs() {\n        return DataManager.getAptDoc()\n    }\n\n    addAppointment = (newAppointment) => {\n        return DataManager.postAppointment(newAppointment).then(() => {\n            DataManager.getAptDoc()\n                .then(allAppointments => this.setState({\n                    appointments: allAppointments\n                }))\n\n        })\n    }\n\n    editAppointment = (id, newObject) => {\n        return DataManager.putAppointment(id, newObject).then(() => {\n            DataManager.getAptDoc().then(allAppointments => this.setState({\n                appointments: allAppointments\n            }))\n        })\n\n    }\n\n    postNewDoctor = (newDoctor) => {\n        return DataManager.postNewDoctor(newDoctor).then(() => {\n            DataManager.getAll(\"doctors\")\n                .then(allDoctors => this.setState({\n                    doctors: allDoctors\n                }))\n        })\n    }\n    getAllDoctors() {\n        return DataManager.getAll(\"doctors\")\n    }\n\n    getAppointmentNotes = (appointmentId) => {\n        return DataManager.getAppointmentNotes(appointmentId)\n    }\n    //notes\n\n    postNewNote = (newNote) => {\n        return DataManager.postNewNote(newNote).then(() => {\n            DataManager.getAll(\"notes\")\n                .then(allNotes => this.setState({\n                    notes: allNotes\n                }))\n        })\n    }\n\n    render() {\n        // console.log(\"ApplicationViewsState\", this.state.appointments)\n        // console.log(\"APPVIEWS STATE\", this.state)\n        return (\n            <>\n                <Route exact path=\"/\" render={(props) => {\n                    return <Login {...props} checkForUser={this.checkForUser} users={this.state.users} />\n                }} />\n                {this.showNav()}\n                <Route exact path=\"/register\" render={(props) => {\n                    return <Register {...props} getUsers={this.getUsers}\n                        postUser={this.postUser} />\n                }} />\n                <Route exact path=\"/home\" render={(props) => {\n                    return <Homepage {...props} users={this.state.users} appointments={this.state.appointments} doctors={this.getAptDocs()} />\n                }} />\n                <Route exact path=\"/track\" render={(props) => {\n                    return <TrackChoice {...props} symptoms={this.state.symptoms} addTrackedSymptom={this.addTrackedSymptom} deleteSymptom={this.deleteTrackedSymptom} getAll={this.getAllSymptoms} trackedSymptoms={this.state.trackedSymptoms}/>\n                }} />\n                <Route exact path=\"/trackedsymptoms\" render={(props)=> {\n                    return <SymptomList {...props} symptoms={this.state.symptoms} addSymptom={this.addSymptom} deleteSymptom={this.deleteSymptom} getAll={this.getAllTrackedSymptoms} trackedSymptoms={this.state.trackedSymptoms}/>\n                }} />\n\n                <Route exact path=\"/symptoms/:symptomId/new\" render={props => {\n                    return <NewSymptomForm {...props} symptoms={this.state.symptoms} addSymptom={this.addSymptom} getAll={this.getAllSymptoms} />\n                }} />\n                <Route exact path=\"/meds\" render={props => {\n                    return <MedicationList {...props} medications={this.state.medications} addMedication={this.addMedication} deleteMedication={this.deleteMedication} getAll={this.getAllMedications} editMedication={this.editMedication} />\n                }} />\n                <Route exact path=\"/medications/new\" render={props => {\n                    return <NewMedicationForm {...props} medications={this.state.medications} addMedication={this.addMedication} getAll={this.getAllMedications} />\n                }} />\n                <Route exact path=\"/meds/editmedication/:id\" render={(props) => {\n                    return <EditMedicationForm {...props} medications={this.state.medications} editMedication={this.editMedication} />\n                }} />\n                <Route exact path=\"/appointments\" render={(props) => {\n                    return <AppointmentList {...props}\n                    addAppointment={this.addAppointment}\n                    appointments={this.state.appointments}\n                    editAppointment={this.editAppointment}\n                    getAptNotes={this.getAllAppointments}\n                    getAptDocs={this.getAptDocs}\n                    getAllDoctors={this.componentDidMount}\n                    getAppointmentNotes={this.getAppointmentNotes}\n                    doctors={this.state.doctors}\n                    postNewDoctor={this.postNewDoctor}\n                    allDoctors={this.state.doctors}\n                    deleteAppointment={this.deleteAppointment}\n                    />\n                }} />\n                <Route exact path=\"/appointment/new\" render={props => {\n                    return <NewAppointmentForm {...props} appointments={this.state.appointments} addAppointment={this.addAppointment} getAptNotes={this.getAllAppointments}\n                    allDoctors={this.state.doctors}\n                     />\n                }} />\n                <Route exact path=\"/doctor/new\" render={props => {\n                    return <NewDoctorForm {...props} doctors={this.state.doctors} postNewDoctor={this.postNewDoctor}\n                     />\n                }} />\n                <Route exact path=\"/appointment/newnote/:id\" render={props=> {\n                    return <NewNoteForm {...props} appointments={this.state.appointments} editAppointment={this.editAppointment}\n                  />\n                }} />\n                <Route exact path=\"/note/:id\" render={props => {\n                    return <NoteCard {...props} appointments={this.state.appointments} />\n                }} />\n                 <Route exact path=\"/note/edit/:id\" render={props => {\n                    return <EditNoteForm {...props} appointments={this.state.appointments} editAppointment={this.editAppointment} />\n                }} />\n                 <Route exact path=\"/appointments/edit/:id\" render={props => {\n                    return <EditAppointmentForm {...props} appointments={this.state.appointments} editAppointment={this.editAppointment}\n                    allDoctors={this.state.doctors} />\n                }} />\n\n\n\n\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}