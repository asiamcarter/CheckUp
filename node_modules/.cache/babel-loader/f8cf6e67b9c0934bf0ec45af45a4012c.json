{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/medications/EditMedicationForm.js\";\nimport React, { Component } from \"react\";\nimport DataManager from \"../../modules/DataManager\";\n\nvar EditMedicationForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditMedicationForm, _Component);\n\n  function EditMedicationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditMedicationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditMedicationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      date: \"\",\n      time: \"\",\n      quantity: \"\",\n      frequency: \"\",\n      userId: \"\"\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.editMedication = function (evt) {\n      evt.preventDefault();\n      var existingMedication = {\n        name: _this.state.name,\n        date: _this.state.date,\n        time: _this.state.time,\n        quantity: _this.state.quantity,\n        frequency: _this.state.frequency,\n        userId: Number(sessionStorage.getItem(\"User\"))\n      };\n\n      _this.props.editMedication(_this.props.match.params.id, existingMedication).then(function () {\n        return _this.props.history.push(\"/meds\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EditMedicationForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      DataManager.getById(this.props.match.params.id, \"medications\").then(function (allMedications) {\n        _this2.setState({\n          name: allMedications.name,\n          date: allMedications.date,\n          time: allMedications.time,\n          quantity: allMedications.quantity,\n          frequency: allMedications.frequency,\n          userId: allMedications.userId\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, console.log(\"NAME:\", this.props), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Edit Medication\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleFieldChange,\n        id: \"name\",\n        placeholder: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"input\", {\n        type: \"date\",\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        placeholder: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleFieldChange,\n        id: \"name\",\n        placeholder: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return EditMedicationForm;\n}(Component);\n\nexport { EditMedicationForm as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/medications/EditMedicationForm.js"],"names":["React","Component","DataManager","EditMedicationForm","state","name","date","time","quantity","frequency","userId","handleFieldChange","evt","stateToChange","target","id","value","setState","editMedication","preventDefault","existingMedication","Number","sessionStorage","getItem","props","match","params","then","history","push","getById","allMedications","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport DataManager from \"../../modules/DataManager\"\n\nexport default class EditMedicationForm extends Component {\n    state = {\n        name: \"\",\n        date: \"\",\n        time: \"\",\n        quantity: \"\",\n        frequency: \"\",\n        userId: \"\"\n    }\n\n\n    handleFieldChange = evt => {\n        const stateToChange = {}\n        stateToChange[evt.target.id] = evt.target.value\n        this.setState(stateToChange)\n    }\n\n    editMedication = evt => {\n        evt.preventDefault();\n        const existingMedication = {\n            name: this.state.name,\n            date: this.state.date,\n            time: this.state.time,\n            quantity: this.state.quantity,\n            frequency: this.state.frequency,\n            userId: Number(sessionStorage.getItem(\"User\"))\n        }\n        this.props.editMedication(this.props.match.params.id, existingMedication)\n            .then(() => this.props.history.push(\"/meds\"))\n    }\n\n    componentDidMount() {\n        DataManager.getById(this.props.match.params.id, \"medications\").then(allMedications => {\n            this.setState({\n                name: allMedications.name,\n                date: allMedications.date,\n                time: allMedications.time,\n                quantity: allMedications.quantity,\n                frequency: allMedications.frequency,\n                userId: allMedications.userId\n            })\n        })\n    }\n    render() {\n        return (\n            <>\n                {console.log(\"NAME:\", this.props)}\n                <form>\n                    <h2>Edit Medication</h2>\n                    <div>\n                        <label htmlFor=\"name\">Name</label>\n                        <input type=\"text\" onChange={this.handleFieldChange} id=\"name\" placeholder={this.state.name} />\n                    </div>\n                    <div>\n                        <label htmlFor=\"date\">Date</label>\n                        <input type=\"date\" onChange={this.handleFieldChange} id=\"date\" placeholder={this.state.date} />\n                    </div>\n                    <div>\n                        <label htmlFor=\"time\">Name</label>\n                        <input type=\"text\" onChange={this.handleFieldChange} id=\"name\" placeholder={this.state.name} />\n                    </div>\n                </form>\n\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}