{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/appointments/AppointmentList.js\";\nimport React, { Component } from \"react\";\nimport AppointmentCard from \"./AppointmentCard\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport \"./Appointment.css\";\nimport DoctorIcon from \"../../images/appointments/doctor.png\";\nimport NewDoctorForm from \"../doctors/NewDoctorForm\";\nimport NewAppointmentForm from \"./NewAppointmentForm\";\n\nvar AppointmentList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppointmentList, _Component);\n\n  function AppointmentList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AppointmentList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppointmentList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      modal: false\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    return _this;\n  }\n\n  _createClass(AppointmentList, [{\n    key: \"render\",\n    // appointmentPlacement = () => {\n    //     {sortedApts.map(appointment =>\n    //         (\n    //             <div key={appointment.id} id={appointment.id}>\n    //             <p>{appointment.date}</p>\n    //             <AppointmentCard key={appointment.id} appointment={appointment} {...this.props} />\n    //             </div>\n    //         ))}\n    // }\n    value: function render() {\n      var _this2 = this;\n\n      var sortedApts = this.props.appointments.sort(function (aptA, aptB) {\n        return new Date(aptA.date) - new Date(aptB.date);\n      });\n      var months = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n      var today = Date.now();\n      var d = new Date();\n      var month = d.getMonth();\n      var date = d.getDate();\n      var year = d.getFullYear();\n      var todayDate = year + \"-\" + months[month] + \"-\" + date;\n      console.log(sortedApts[0]); // let today = Date.parse(\"2019-02-12\")\n\n      console.log(todayDate); // let today= Date.now()\n      // console.log(today)\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"appointmentList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: DoctorIcon,\n        alt: \"doctor icon\",\n        width: \"50\",\n        height: \"50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Appointment List\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(NewDoctorForm, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Today\"), sortedApts.map(function (appointment) {\n        return Date.parse(\"\".concat(appointment.date)) === todayDate ? React.createElement(\"div\", {\n          key: appointment.id,\n          id: appointment.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(AppointmentCard, Object.assign({\n          key: appointment.id,\n          appointment: appointment\n        }, _this2.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }))) : \"\";\n      }), React.createElement(\"section\", {\n        className: \"appointment-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Upcoming Appointments\"), sortedApts.map(function (appointment) {\n        return Date.parse(\"\".concat(appointment.date)) > today ? React.createElement(\"div\", {\n          key: appointment.id,\n          id: appointment.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(AppointmentCard, Object.assign({\n          key: appointment.id,\n          appointment: appointment\n        }, _this2.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }))) : \"\";\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Previous Appointments\"), sortedApts.map(function (appointment) {\n        return Date.parse(\"\".concat(appointment.date)) < today ? React.createElement(\"div\", {\n          key: appointment.id,\n          id: appointment.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(AppointmentCard, Object.assign({\n          key: appointment.id,\n          appointment: appointment\n        }, _this2.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }))) : \"\";\n      })), React.createElement(NewAppointmentForm, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AppointmentList;\n}(Component);\n\nexport { AppointmentList as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/appointments/AppointmentList.js"],"names":["React","Component","AppointmentCard","Button","Modal","ModalHeader","ModalBody","ModalFooter","DoctorIcon","NewDoctorForm","NewAppointmentForm","AppointmentList","state","modal","handleFieldChange","evt","stateToChange","target","id","value","setState","sortedApts","props","appointments","sort","aptA","aptB","Date","date","months","today","now","d","month","getMonth","getDate","year","getFullYear","todayDate","console","log","map","appointment","parse"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport AppointmentCard from \"./AppointmentCard\"\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport \"./Appointment.css\"\nimport DoctorIcon from \"../../images/appointments/doctor.png\"\nimport NewDoctorForm from \"../doctors/NewDoctorForm\"\nimport NewAppointmentForm from \"./NewAppointmentForm\"\n\n\n\nexport default class AppointmentList extends Component {\n    state = {\n        modal: false\n    }\n\n    handleFieldChange = evt => {\n        const stateToChange = {};\n        stateToChange[evt.target.id] = evt.target.value;\n        this.setState(stateToChange)\n    }\n\n    // appointmentPlacement = () => {\n    //     {sortedApts.map(appointment =>\n    //         (\n\n    //             <div key={appointment.id} id={appointment.id}>\n    //             <p>{appointment.date}</p>\n    //             <AppointmentCard key={appointment.id} appointment={appointment} {...this.props} />\n    //             </div>\n\n    //         ))}\n    // }\n\n    render() {\n\n         const sortedApts = this.props.appointments.sort(function (aptA, aptB) {\n            return new Date (aptA.date) - new Date(aptB.date)\n        })\n        let months = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n        let today = Date.now()\n        let d = new Date();\n        let month = d.getMonth();\n        let date = d.getDate();\n        let year = d.getFullYear();\n\n        let todayDate =  year + \"-\" + months[month]+ \"-\" + date\n        console.log(sortedApts[0])\n\n\n\n\n        // let today = Date.parse(\"2019-02-12\")\n        console.log(todayDate)\n        // let today= Date.now()\n        // console.log(today)\n        return (\n            <>\n                <div className=\"appointmentList\">\n                <img src={DoctorIcon} alt=\"doctor icon\" width=\"50\" height=\"50\"/>\n                    <h2>Appointment List</h2>\n                </div>\n                <div>\n\n\n                <NewDoctorForm {...this.props}/>\n\n                </div>\n\n                <h4>Today</h4>\n                {sortedApts.map(appointment =>\n            Date.parse(`${appointment.date}`) === todayDate ?\n            <div key={appointment.id} id={appointment.id}>\n            <AppointmentCard key={appointment.id} appointment={appointment} {...this.props} />\n            </div>\n    : \"\")}\n\n                <section className=\"appointment-list\">\n                <h4>Upcoming Appointments</h4>\n                {sortedApts.map(appointment =>\n            Date.parse(`${appointment.date}`) > today ?\n            <div key={appointment.id} id={appointment.id}>\n            <AppointmentCard key={appointment.id} appointment={appointment} {...this.props} />\n            </div>\n    : \"\")}\n    <h4>Previous Appointments</h4>\n                {sortedApts.map(appointment =>\n            Date.parse(`${appointment.date}`) < today ?\n            <div key={appointment.id} id={appointment.id}>\n            <AppointmentCard key={appointment.id} appointment={appointment} {...this.props} />\n            </div>\n    : \"\")}\n                </section>\n\n                <NewAppointmentForm {...this.props}/>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}