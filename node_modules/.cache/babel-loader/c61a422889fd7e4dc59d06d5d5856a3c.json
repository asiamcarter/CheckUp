{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/medications/NewMedicationForm.js\";\nimport React, { Component } from \"react\";\nimport AddToCalendar from 'react-add-to-calendar';\nimport * as moment from 'moment';\n\nvar NewMedicationForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewMedicationForm, _Component);\n\n  function NewMedicationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewMedicationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewMedicationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      date: \"\",\n      time: \"\",\n      quantity: \"\",\n      frequency: \"\",\n      userId: \"\"\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n\n      console.log(evt.target, evt.target.value);\n    };\n\n    _this.addNewMedication = function (evt) {\n      evt.preventDefault();\n      var newMedicationObject = {\n        name: _this.state.name,\n        date: _this.state.date,\n        time: _this.state.time,\n        quantity: _this.state.quantity,\n        frequency: _this.state.frequency,\n        userId: Number(sessionStorage.getItem(\"User\"))\n      };\n\n      _this.props.addMedication(newMedicationObject); // .then(()=> this.props.history.push(\"/meds\"))\n\n    };\n\n    return _this;\n  }\n\n  _createClass(NewMedicationForm, [{\n    key: \"render\",\n    value: function render() {\n      var date = this.state.date;\n      moment().format(date);\n      console.log(\"date\", date);\n      var event = {\n        title: \"hi\",\n        description: \"bye\",\n        location: \"\",\n        startTime: \"15:00\",\n        endTime: \"04:00\"\n      };\n      return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \" Add New Medication\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"input\", {\n        type: \"date\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"input\", {\n        type: \"time\",\n        required: true,\n        id: \"time\",\n        onChange: this.handleFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        id: \"quantity\",\n        onChange: this.handleFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        htmlFor: \"frequency\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Frequency\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        id: \"frequency\",\n        onChange: this.handleFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.addNewMedication,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Add\"), React.createElement(AddToCalendar, {\n        event: event,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return NewMedicationForm;\n}(Component);\n\nexport { NewMedicationForm as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/medications/NewMedicationForm.js"],"names":["React","Component","AddToCalendar","moment","NewMedicationForm","state","name","date","time","quantity","frequency","userId","handleFieldChange","evt","stateToChange","target","id","value","setState","console","log","addNewMedication","preventDefault","newMedicationObject","Number","sessionStorage","getItem","props","addMedication","format","event","title","description","location","startTime","endTime"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport AddToCalendar from 'react-add-to-calendar';\nimport * as moment from 'moment';\n\nexport default class NewMedicationForm extends Component{\n    state= {\n        name: \"\",\n        date: \"\",\n        time: \"\",\n        quantity: \"\",\n        frequency: \"\",\n        userId: \"\"\n\n    }\n\n    handleFieldChange = evt => {\n        const stateToChange={};\n        stateToChange[evt.target.id] = evt.target.value;\n        this.setState(stateToChange);\n        console.log(evt.target, evt.target.value)\n    }\n\n    addNewMedication = evt => {\n        evt.preventDefault();\n        const newMedicationObject = {\n            name: this.state.name,\n            date: this.state.date,\n            time: this.state.time,\n            quantity: this.state.quantity,\n            frequency: this.state.frequency,\n            userId: Number(sessionStorage.getItem(\"User\")),\n        }\n        this.props.addMedication(newMedicationObject)\n        // .then(()=> this.props.history.push(\"/meds\"))\n    }\n    render() {\n        let date = this.state.date\n        moment().format(date);\n        console.log(\"date\",date)\n        let event = {title: \"hi\",\n        description: \"bye\",\n        location: \"\",\n        startTime: \"15:00\",\n        endTime: \"04:00\"}\n\n        return (\n            <>\n            <h2> Add New Medication</h2>\n            <div>\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" required onChange={this.handleFieldChange} id=\"name\" />\n            </div>\n            <div>\n                <label htmlFor=\"date\">Date</label>\n                <input type=\"date\" required onChange={this.handleFieldChange} id=\"date\" />\n            </div>\n            <div>\n                <label htmlFor=\"time\">Time</label>\n                <input type=\"time\" required id=\"time\" onChange={this.handleFieldChange} />\n            </div>\n            <div>\n                <label htmlFor=\"quantity\">Quantity</label>\n                <input type=\"text\" required id=\"quantity\" onChange={this.handleFieldChange} />\n            </div>\n            <label htmlFor=\"frequency\">Frequency</label>\n            <input type=\"text\" required id=\"frequency\" onChange={this.handleFieldChange} />\n            <div>\n                <button type=\"submit\" onClick={this.addNewMedication} >\n                    Add\n                </button>\n                <AddToCalendar event={event}/>\n            </div>\n            </>\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}