{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/appointments/AppointmentCard.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nvar AppointmentCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppointmentCard, _Component);\n\n  function AppointmentCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AppointmentCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppointmentCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.showUserAppointments = function () {\n      // console.log(parseInt(sessionStorage.getItem(\"User\")), this.props.appointment.userId)\n      console.log(_this.props);\n\n      if (_this.props.appointment.userId === parseInt(sessionStorage.getItem(\"User\"))) {\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          key: _this.props.appointment.id,\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, _this.props.appointment.doctor.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, _this.props.appointment.doctor.location), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/appointments/editappointment/\".concat(_this.props.appointments.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Date: \", _this.props.appointment.date), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Time: \", _this.props.appointment.time), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Reason: \", _this.props.appointment.reason), _this.noteButton()))));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AppointmentCard, [{\n    key: \"noteButton\",\n    value: function noteButton() {\n      console.log(this.props.appointment.id);\n\n      if (this.notesId() === this.props.appointment.id) {\n        console.log(\"true\");\n      }\n    }\n  }, {\n    key: \"notesId\",\n    value: function notesId() {\n      this.props.notes.map(function (note) {\n        console.log(note.id);\n        return note.id;\n      });\n    } // noteButton = () => {\n    // if (this.props.appointment.note === \"\") {\n    //     return (\n    //         <>\n    //             <Link to={\"appointment/newnote\"}>Add Note</Link>\n    //             {/* <button type=\"button\" onClick={()=> this.props.history.push(\"/appointment/newnote\")}>\n    //                 Add Note\n    //             </button> */}\n    //         </>\n    //     )\n    // } else {\n    //     return (\n    //         <>\n    //             <Link to={`/note/${this.props.appointment.id}`}>View Note</Link>\n    //         </>\n    //     )\n    // }\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, this.showUserAppointments());\n    }\n  }]);\n\n  return AppointmentCard;\n}(Component);\n\nexport { AppointmentCard as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/appointments/AppointmentCard.js"],"names":["React","Component","Link","AppointmentCard","showUserAppointments","console","log","props","appointment","userId","parseInt","sessionStorage","getItem","id","doctor","name","location","appointments","date","time","reason","noteButton","notesId","notes","map","note"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEqBC,e;;;;;;;;;;;;;;;;;;UAsCjBC,oB,GAAuB,YAAM;AACzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAjB;;AACA,UAAI,MAAKA,KAAL,CAAWC,WAAX,CAAuBC,MAAvB,KAAkCC,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAD,CAA9C,EAAgF;AAC5E,eACI,0CACI;AAAK,UAAA,GAAG,EAAE,MAAKL,KAAL,CAAWC,WAAX,CAAuBK,EAAjC;AACI,UAAA,SAAS,EAAC,MADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,MAAKN,KAAL,CAAWC,WAAX,CAAuBM,MAAvB,CAA8BC,IADnC,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,MAAKR,KAAL,CAAWC,WAAX,CAAuBM,MAAvB,CAA8BE,QAAlC,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,0CAAmC,MAAKT,KAAL,CAAWU,YAAX,CAAwBJ,EAA3D,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAU,MAAKN,KAAL,CAAWC,WAAX,CAAuBU,IAAjC,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAU,MAAKX,KAAL,CAAWC,WAAX,CAAuBW,IAAjC,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAY,MAAKZ,KAAL,CAAWC,WAAX,CAAuBY,MAAnC,CAJJ,EAMK,MAAKC,UAAL,EANL,CARJ,CAFJ,CADJ,CADJ;AA0BH;AACJ,K;;;;;;;iCAnEU;AACRhB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,WAAX,CAAuBK,EAAnC;;AACA,UAAI,KAAKS,OAAL,OAAmB,KAAKf,KAAL,CAAWC,WAAX,CAAuBK,EAA9C,EAAkD;AAC9CR,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;AAAC;;;8BAEQ;AACN,WAAKC,KAAL,CAAWgB,KAAX,CAAiBC,GAAjB,CAAqB,UAAAC,IAAI,EAAG;AACxBpB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAI,CAACZ,EAAjB;AACA,eAAOY,IAAI,CAACZ,EAAZ;AACH,OAHD;AAIH,K,CAKJ;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;;;;6BAkCS;AACL,aACI,0CACK,KAAKT,oBAAL,EADL,CADJ;AAKH;;;;EA5EwCH,S;;SAAxBE,e","sourcesContent":["import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport default class AppointmentCard extends Component {\n\n   noteButton(){\n       console.log(this.props.appointment.id)\n       if (this.notesId() === this.props.appointment.id) {\n           console.log(\"true\")\n       }}\n\n       notesId() {\n           this.props.notes.map(note=> {\n               console.log(note.id)\n               return note.id\n           })\n       }\n\n\n\n\n    // noteButton = () => {\n        // if (this.props.appointment.note === \"\") {\n        //     return (\n        //         <>\n        //             <Link to={\"appointment/newnote\"}>Add Note</Link>\n        //             {/* <button type=\"button\" onClick={()=> this.props.history.push(\"/appointment/newnote\")}>\n        //                 Add Note\n        //             </button> */}\n        //         </>\n        //     )\n        // } else {\n        //     return (\n        //         <>\n        //             <Link to={`/note/${this.props.appointment.id}`}>View Note</Link>\n        //         </>\n        //     )\n        // }\n\n    // }\n\n    showUserAppointments = () => {\n        // console.log(parseInt(sessionStorage.getItem(\"User\")), this.props.appointment.userId)\n        console.log(this.props)\n        if (this.props.appointment.userId === parseInt(sessionStorage.getItem(\"User\"))) {\n            return (\n                <>\n                    <div key={this.props.appointment.id}\n                        className=\"card\">\n                        <div className=\"card-body\">\n                            <div>\n                                <h5 className=\"card-title\">\n                                    {this.props.appointment.doctor.name}\n                                </h5>\n                                <p>{this.props.appointment.doctor.location}</p>\n                                <hr />\n                            </div>\n                            <div>\n                                <Link to={`/appointments/editappointment/${this.props.appointments.id}`}>Edit</Link>\n                                <p>Date: {this.props.appointment.date}</p>\n                                <p>Time: {this.props.appointment.time}</p>\n                                <p>Reason: {this.props.appointment.reason}</p>\n                                {/* <p>{this.state.notes}</p> */}\n                                {this.noteButton()}\n                            </div>\n                        </div>\n\n                    </div>\n                </>\n\n            )\n        }\n    }\n    render() {\n        return (\n            <>\n                {this.showUserAppointments()}\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}