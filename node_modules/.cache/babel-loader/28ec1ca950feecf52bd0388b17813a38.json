{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from \"react\";\nimport DataManager from \"../../modules/DataManager\";\n\nvar EditNoteForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditNoteForm, _Component);\n\n  function EditNoteForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditNoteForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditNoteForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.editNote = function (evt) {\n      evt.preventDefault();\n      var newNoteObject = {\n        userId: _this.state.userId,\n        doctorId: _this.state.doctorId,\n        time: _this.state.time,\n        date: _this.state.date,\n        reason: _this.state.reason,\n        note: _this.state.note,\n        timestamp: new Date(),\n        audio: _this.state.audio,\n        photo: _this.state.photo\n      };\n\n      _this.props.editAppointment(_this.props.match.params.id, newNoteObject);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditNoteForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, \"Edit Note Here\");\n    }\n  }]);\n\n  return EditNoteForm;\n}(Component);\n\nexport { EditNoteForm as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/notes/EditNoteForm.js"],"names":["React","Component","DataManager","EditNoteForm","handleFieldChange","evt","stateToChange","target","id","value","setState","editNote","preventDefault","newNoteObject","userId","state","doctorId","time","date","reason","note","timestamp","Date","audio","photo","props","editAppointment","match","params"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;IAEqBC,Y;;;;;;;;;;;;;;;;;;UAEjBC,iB,GAAoB,UAAAC,GAAG,EAAI;AACvB,UAAMC,aAAa,GAAG,EAAtB;AACAA,MAAAA,aAAa,CAACD,GAAG,CAACE,MAAJ,CAAWC,EAAZ,CAAb,GAA+BH,GAAG,CAACE,MAAJ,CAAWE,KAA1C;;AACA,YAAKC,QAAL,CAAcJ,aAAd;AACH,K;;UAEDK,Q,GAAW,UAAAN,GAAG,EAAI;AACdA,MAAAA,GAAG,CAACO,cAAJ;AACA,UAAMC,aAAa,GAAG;AAClBC,QAAAA,MAAM,EAAE,MAAKC,KAAL,CAAWD,MADD;AAElBE,QAAAA,QAAQ,EAAE,MAAKD,KAAL,CAAWC,QAFH;AAGlBC,QAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWE,IAHC;AAIlBC,QAAAA,IAAI,EAAE,MAAKH,KAAL,CAAWG,IAJC;AAKlBC,QAAAA,MAAM,EAAE,MAAKJ,KAAL,CAAWI,MALD;AAMlBC,QAAAA,IAAI,EAAE,MAAKL,KAAL,CAAWK,IANC;AAOlBC,QAAAA,SAAS,EAAE,IAAIC,IAAJ,EAPO;AAQlBC,QAAAA,KAAK,EAAE,MAAKR,KAAL,CAAWQ,KARA;AASlBC,QAAAA,KAAK,EAAE,MAAKT,KAAL,CAAWS;AATA,OAAtB;;AAWC,YAAKC,KAAL,CAAWC,eAAX,CAA2B,MAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBpB,EAAnD,EAAuDK,aAAvD;AAGJ,K;;;;;;;6BACK;AACL,aACI,2DADJ;AAKH;;;;EA/BwCZ,S;;SAArBE,Y","sourcesContent":["import React, { Component } from \"react\"\nimport DataManager from \"../../modules/DataManager\"\n\nexport default class EditNoteForm extends Component {\n\n    handleFieldChange = evt => {\n        const stateToChange = {};\n        stateToChange[evt.target.id] = evt.target.value;\n        this.setState(stateToChange);\n    }\n\n    editNote = evt => {\n        evt.preventDefault();\n        const newNoteObject = {\n            userId: this.state.userId,\n            doctorId: this.state.doctorId,\n            time: this.state.time,\n            date: this.state.date,\n            reason: this.state.reason,\n            note: this.state.note,\n            timestamp: new Date(),\n            audio: this.state.audio,\n            photo: this.state.photo\n        }\n         this.props.editAppointment(this.props.match.params.id, newNoteObject)\n\n\n    }\n render() {\n     return (\n         <>\n         Edit Note Here\n         </>\n     )\n }\n}"]},"metadata":{},"sourceType":"module"}