{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/notes/NewNoteForm.js\";\nimport React, { Component } from \"react\";\nimport DataManager from \"../../modules/DataManager\";\nimport ReactMicRecord from \"react-mic-record\";\nimport * as firebase from \"firebase\";\nimport mic from \"../../images/notes/microphone.png\";\nimport camera from \"../../images/notes/camera.png\";\nimport note from \"../../images/notes/edit.png\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar NewNoteForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewNoteForm, _Component);\n\n  function NewNoteForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewNoteForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewNoteForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userId: \"\",\n      doctorId: \"\",\n      time: \"\",\n      date: \"\",\n      reason: \"\",\n      note: \"\",\n      timestamp: \"\",\n      audioDownloadURL: \"\",\n      photo: [],\n      record: false,\n      audio: \"\",\n      stream: \"\"\n    };\n\n    _this.startRecording = function () {\n      _this.setState({\n        record: true\n      });\n    };\n\n    _this.stopRecording = function () {\n      _this.setState({\n        record: false\n      });\n    };\n\n    _this.onStop = function (recordedBlob) {\n      console.log('recordedBlob is: ', recordedBlob);\n      var file = recordedBlob.blob; //file name to save in database\n      //reference to the file location on firebase\n\n      var uploadedAudio = firebase.storage().ref(\"/audio/\" + recordedBlob.blobURL); //uploading the song\n\n      var task = uploadedAudio.put(file); //an open connection to the status of that upload\n\n      task.on('state_changed', function (snapshot) {\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log('Upload is ' + progress + '% done');\n\n        switch (snapshot.state) {\n          case firebase.storage.TaskState.PAUSED:\n            console.log('Upload is paused');\n            break;\n\n          case firebase.storage.TaskState.RUNNING:\n            console.log('Upload is running');\n            break;\n\n          default: //\n\n        }\n      }, function (error) {\n        console.log(error);\n      }, function () {\n        //getting the download url\n        task.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n          //setting the download url and file name to state\n          _this.setState({\n            audioDownloadURL: downloadURL\n          });\n        });\n      });\n    };\n\n    _this.onImageSave = function (e) {\n      console.log('This is an image: ', e.target.files[0]);\n      var file = e.target.files[0]; //file name to save in database\n      //reference to the file location on firebase\n\n      var uploadedPhoto = firebase.storage().ref(\"/photos/\" + e.target.files[0].name); //uploading the song\n\n      var task = uploadedPhoto.put(file); //an open connection to the status of that upload\n\n      task.on('state_changed', function (snapshot) {\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log('Upload is ' + progress + '% done');\n\n        switch (snapshot.state) {\n          case firebase.storage.TaskState.PAUSED:\n            console.log('Upload is paused');\n            break;\n\n          case firebase.storage.TaskState.RUNNING:\n            console.log('Upload is running');\n            break;\n\n          default: //\n\n        }\n      }, function (error) {\n        console.log(error);\n      }, function () {\n        //getting the download url\n        task.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n          //setting the download url and file name to state\n          var photosArray = [];\n          photosArray.push(downloadURL);\n\n          _this.setState({\n            photo: photosArray\n          });\n        });\n      });\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n\n      console.log(evt.target, evt.target.value);\n    };\n\n    _this.addNewNote = function (evt) {\n      evt.preventDefault();\n      var newNoteObject = {\n        userId: _this.state.userId,\n        doctorId: _this.state.doctorId,\n        time: _this.state.time,\n        date: _this.state.date,\n        reason: _this.state.reason,\n        note: _this.state.note,\n        timestamp: new Date(),\n        uploadedFileName: _this.state.uploadedFileName,\n        audioDownloadURL: _this.state.audioDownloadURL,\n        photo: _this.state.photo\n      };\n\n      _this.props.editAppointment(_this.props.match.params.id, newNoteObject).then(function () {\n        return _this.props.history.push(\"/note/\".concat(_this.props.match.params.id));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewNoteForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      DataManager.getById(this.props.match.params.id, \"appointments\").then(function (appointment) {\n        _this2.setState({\n          userId: appointment.userId,\n          doctorId: appointment.doctorId,\n          time: appointment.time,\n          date: appointment.date,\n          reason: appointment.reason,\n          note: appointment.note,\n          timestamp: appointment.timestamp,\n          audio: appointment.audio,\n          photo: appointment.photo\n        });\n      });\n    }\n  }, {\n    key: \"onData\",\n    value: function onData(recordedBlob) {\n      console.log('chunk of real-time data is: ', recordedBlob);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(\"NEW NOTE STATE:\", this.state);\n      return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"New Note\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: mic,\n        alt: \"microphone icon\",\n        height: \"50px\",\n        width: \"50px\",\n        id: \"mic-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        src: camera,\n        alt: \"camera icon\",\n        height: \"50px\",\n        width: \"50px\",\n        id: \"camera-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        src: note,\n        alt: \"note icon\",\n        height: \"50px\",\n        width: \"50px\",\n        id: \"note-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Content\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(ReactMicRecord, {\n        record: this.state.record,\n        className: \"sound-wave\",\n        onStop: this.onStop,\n        strokeColor: \"#000000\",\n        backgroundColor: \"#ffffff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.startRecording,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"button\", {\n        onClick: this.stopRecording,\n        value: \"audio\",\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Stop\"), this.state.audio !== \"\" ? React.createElement(\"figure\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Listen:\"), React.createElement(\"audio\", {\n        controls: true,\n        src: this.state.audioDownloadURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Your browser does not support the\", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"audio\"), \" element.\")) : \"\", React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        capture: true,\n        onChange: function onChange(e) {\n          return _this3.onImageSave(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note-images-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Images\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), this.state.photo !== \"\" ? React.createElement(\"img\", {\n        src: this.state.photo,\n        alt: \"savedbyuser\",\n        width: \"50px\",\n        height: \"50px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }) : \"\"), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.addNewNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return NewNoteForm;\n}(Component);\n\nexport { NewNoteForm as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/notes/NewNoteForm.js"],"names":["React","Component","DataManager","ReactMicRecord","firebase","mic","camera","note","Button","Modal","ModalHeader","ModalBody","ModalFooter","NewNoteForm","state","userId","doctorId","time","date","reason","timestamp","audioDownloadURL","photo","record","audio","stream","startRecording","setState","stopRecording","onStop","recordedBlob","console","log","file","blob","uploadedAudio","storage","ref","blobURL","task","put","on","snapshot","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","error","getDownloadURL","then","downloadURL","onImageSave","e","target","files","uploadedPhoto","name","photosArray","push","handleFieldChange","evt","stateToChange","id","value","addNewNote","preventDefault","newNoteObject","Date","uploadedFileName","props","editAppointment","match","params","history","getById","appointment"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport DataManager from \"../../modules/DataManager\"\nimport ReactMicRecord from \"react-mic-record\"\nimport * as firebase from \"firebase\"\nimport mic from \"../../images/notes/microphone.png\"\nimport camera from \"../../images/notes/camera.png\"\nimport note from \"../../images/notes/edit.png\"\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport default class NewNoteForm extends Component {\n    state = {\n        userId: \"\",\n        doctorId: \"\",\n        time: \"\",\n        date: \"\",\n        reason: \"\",\n        note: \"\",\n        timestamp: \"\",\n       audioDownloadURL: \"\",\n        photo: [],\n        record: false,\n        audio: \"\",\n        stream: \"\"\n    }\n\n    componentDidMount() {\n        DataManager.getById(this.props.match.params.id, \"appointments\").then(appointment => {\n            this.setState({\n                userId: appointment.userId,\n                doctorId: appointment.doctorId,\n                time: appointment.time,\n                date: appointment.date,\n                reason: appointment.reason,\n                note: appointment.note,\n                timestamp: appointment.timestamp,\n                audio: appointment.audio,\n                photo: appointment.photo\n            })\n        })\n    }\n\n\n\n    startRecording = () => {\n        this.setState({\n            record: true\n        });\n    }\n\n    stopRecording = () => {\n        this.setState({\n            record: false\n        });\n    }\n\n    onData(recordedBlob) {\n        console.log('chunk of real-time data is: ', recordedBlob);\n    }\n\n    onStop = (recordedBlob) => {\n        console.log('recordedBlob is: ', recordedBlob);\n\n\n\n        let file = recordedBlob.blob\n        //file name to save in database\n\n        //reference to the file location on firebase\n        let uploadedAudio = firebase.storage().ref(\"/audio/\"+ recordedBlob.blobURL)\n        //uploading the song\n        let task = uploadedAudio.put(file)\n        //an open connection to the status of that upload\n        task.on('state_changed', (snapshot) => {\n          let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log('Upload is ' + progress + '% done');\n          switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n              console.log('Upload is paused');\n              break;\n            case firebase.storage.TaskState.RUNNING:\n              console.log('Upload is running');\n              break;\n              default: //\n          }\n        }, (error) => {\n          console.log(error)\n        },\n          () => {\n            //getting the download url\n            task.snapshot.ref.getDownloadURL().then((downloadURL) => {\n\n              //setting the download url and file name to state\n              this.setState({\n               audioDownloadURL: downloadURL\n              })\n            })\n          })\n\n    }\n\n    onImageSave = (e) => {\n        console.log('This is an image: ', e.target.files[0]);\n\n\n\n        let file = e.target.files[0]\n        //file name to save in database\n\n        //reference to the file location on firebase\n        let uploadedPhoto = firebase.storage().ref(\"/photos/\"+ e.target.files[0].name)\n        //uploading the song\n        let task = uploadedPhoto.put(file)\n        //an open connection to the status of that upload\n        task.on('state_changed', (snapshot) => {\n          let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log('Upload is ' + progress + '% done');\n          switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n              console.log('Upload is paused');\n              break;\n            case firebase.storage.TaskState.RUNNING:\n              console.log('Upload is running');\n              break;\n              default: //\n          }\n        }, (error) => {\n          console.log(error)\n        },\n          () => {\n            //getting the download url\n            task.snapshot.ref.getDownloadURL().then((downloadURL) => {\n\n              //setting the download url and file name to state\n              let photosArray= []\n              photosArray.push(downloadURL)\n\n              this.setState({\n               photo: photosArray\n            })\n          })\n\n    })}\n\n\n\n    handleFieldChange = evt => {\n        const stateToChange = {};\n        stateToChange[evt.target.id] = evt.target.value;\n        this.setState(stateToChange);\n        console.log(evt.target, evt.target.value)\n\n    }\n\n    addNewNote = evt => {\n        evt.preventDefault();\n        const newNoteObject = {\n            userId: this.state.userId,\n            doctorId: this.state.doctorId,\n            time: this.state.time,\n            date: this.state.date,\n            reason: this.state.reason,\n            note: this.state.note,\n            timestamp: new Date(),\n            uploadedFileName: this.state.uploadedFileName,\n           audioDownloadURL: this.state.audioDownloadURL,\n            photo: this.state.photo\n        }\n        this.props.editAppointment(this.props.match.params.id, newNoteObject)\n            .then(() => this.props.history.push(`/note/${this.props.match.params.id}`))\n    }\n\n    render() {\n\n\n        console.log(\"NEW NOTE STATE:\", this.state)\n        return (\n            <>\n                    <h2>New Note</h2>\n                    <div>\n                        <img src={mic} alt=\"microphone icon\" height=\"50px\" width=\"50px\" id=\"mic-icon\"/>\n\n                        <img src={camera} alt=\"camera icon\" height=\"50px\" width=\"50px\" id=\"camera-icon\"/>\n\n                        <img src={note} alt=\"note icon\" height=\"50px\" width=\"50px\" id=\"note-icon\"/>\n\n\n                        <label htmlFor=\"content\">Content</label>\n                        <input type=\"text\" required onChange={this.handleFieldChange} id=\"note\" />\n\n\n\n                         <ReactMicRecord\n                            record={this.state.record}\n                            className=\"sound-wave\"\n                            onStop={this.onStop}\n                            strokeColor=\"#000000\"\n                            backgroundColor=\"#ffffff\" />\n                            <button onClick={this.startRecording} type=\"button\">Start</button>\n                        <button onClick={this.stopRecording} value=\"audio\" type=\"button\">Stop</button>\n\n                            {this.state.audio !== \"\" ?\n                            <figure>\n                            <figcaption>Listen:</figcaption>\n                            <audio\n                                controls\n                                src={this.state.audioDownloadURL}>\n                                Your browser does not support the\n                                <code>audio</code> element.\n                            </audio>\n                            </figure>\n                            : \"\"}\n\n                            <input type=\"file\" accept=\"image/*\" capture onChange={(e)=> this.onImageSave(e)}></input>\n\n\n                        <div className=\"note-images-div\">\n                        <h4>Images</h4>\n                        <hr />\n                        {this.state.photo !== \"\" ?\n                        <img src={this.state.photo} alt=\"savedbyuser\" width=\"50px\" height=\"50px\"/>\n                        : \"\"}\n                        </div>\n\n<button type=\"submit\" onClick={this.addNewNote} >Add</button>\n                    </div>\n\n\n                </>\n            )\n        }\n    }\n"]},"metadata":{},"sourceType":"module"}