{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/appointments/AppointmentList.js\";\nimport React, { Component } from \"react\";\nimport AppointmentCard from \"./AppointmentCard\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport \"./Appointment.css\";\nimport DoctorIcon from \"../../images/appointments/doctor.png\";\nimport NewAppointmentForm from \"./NewAppointmentForm\";\n\nvar AppointmentList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppointmentList, _Component);\n\n  function AppointmentList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AppointmentList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppointmentList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      modal: false,\n      name: \"\",\n      location: \"\"\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.addDoctor = function (evt) {\n      evt.preventDefault();\n      var newDoctor = {\n        name: _this.state.name,\n        location: _this.state.location,\n        userId: Number(sessionStorage.getItem(\"User\"))\n      };\n\n      _this.props.postNewDoctor(newDoctor);\n\n      _this.toggle();\n    };\n\n    _this.toggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AppointmentList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"APT PROPS\", this.state);\n      var sortedApts = this.props.appointments.sort(function (aptA, aptB) {\n        return new Date(aptA.date) - new Date(aptB.date);\n      });\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"appointmentList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: DoctorIcon,\n        alt: \"doctor icon\",\n        width: \"50\",\n        height: \"50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Appointment List\")), React.createElement(Button, {\n        onClick: this.toggle,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" \", this.props.buttonLabel, React.createElement(\"h1\", {\n        className: \"add-h1\",\n        id: \"add-doctor-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Add Doctor\")), React.createElement(\"div\", {\n        className: \"centerModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.modal,\n        className: \"modal-sm\",\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Add Doctor\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Add New Doctor\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"doctor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleFieldChange,\n        id: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Location\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleFieldChange,\n        id: \"location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: this.state.location ? \"success\" : \"primary\",\n        onClick: this.addDoctor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Cancel\")))), React.createElement(\"section\", {\n        className: \"appointment-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, sortedApts.map(function (appointment) {\n        return React.createElement(\"div\", {\n          key: appointment.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(AppointmentCard, Object.assign({\n          key: appointment.id,\n          appointment: appointment\n        }, _this2.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        })));\n      })), React.createElement(Button, {\n        color: \"success\",\n        type: \"submit\",\n        id: \"add-appointment-button\",\n        onClick: function onClick() {\n          _this2.props.history.push(\"/appointment/new\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Add\"), React.createElement(NewAppointmentForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AppointmentList;\n}(Component);\n\nexport { AppointmentList as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/appointments/AppointmentList.js"],"names":["React","Component","AppointmentCard","Button","Modal","ModalHeader","ModalBody","ModalFooter","DoctorIcon","NewAppointmentForm","AppointmentList","state","modal","name","location","handleFieldChange","evt","stateToChange","target","id","value","setState","addDoctor","preventDefault","newDoctor","userId","Number","sessionStorage","getItem","props","postNewDoctor","toggle","prevState","console","log","sortedApts","appointments","sort","aptA","aptB","Date","date","buttonLabel","map","appointment","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport AppointmentCard from \"./AppointmentCard\"\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport \"./Appointment.css\"\nimport DoctorIcon from \"../../images/appointments/doctor.png\"\nimport NewAppointmentForm from \"./NewAppointmentForm\"\n\n\nexport default class AppointmentList extends Component {\n    state = {\n        modal: false,\n        name: \"\",\n        location: \"\"\n    }\n\n    handleFieldChange = evt => {\n        const stateToChange = {};\n        stateToChange[evt.target.id] = evt.target.value;\n        this.setState(stateToChange)\n    }\n\n    addDoctor = evt => {\n        evt.preventDefault();\n        const newDoctor = {\n            name: this.state.name,\n            location: this.state.location,\n            userId: Number(sessionStorage.getItem(\"User\"))\n        }\n        this.props.postNewDoctor(newDoctor)\n        this.toggle()\n    }\n\n    toggle= () => {\n        this.setState(prevState => ({\n          modal: !prevState.modal\n        }));\n      }\n\n    render() {\n        console.log(\"APT PROPS\",this.state)\n         const sortedApts = this.props.appointments.sort(function (aptA, aptB) {\n            return new Date (aptA.date) - new Date(aptB.date)\n        })\n        return (\n            <>\n                <div className=\"appointmentList\">\n                <img src={DoctorIcon} alt=\"doctor icon\" width=\"50\" height=\"50\"/>\n                    <h2>Appointment List</h2>\n\n                {/* <button type=\"submit\" onClick={()=> {\n                    this.props.history.push(\"/doctor/new\")\n                }} >\n                Add Doctor\n                </button> */}\n                </div>\n\n                <Button onClick={this.toggle} size=\"sm\"> {this.props.buttonLabel}\n                             <h1 className=\"add-h1\" id=\"add-doctor-button\">\n                               Add Doctor\n                            </h1>\n                        </Button>\n\n\n\n                        <div className=\"centerModal\">\n                <Modal isOpen={this.state.modal} className=\"modal-sm\" toggle={this.toggle} >\n                <ModalHeader toggle={this.toggle}>Add Doctor</ModalHeader>\n                <ModalBody >\n                <form>\n                <h2>Add New Doctor</h2>\n                <div>\n                    <label htmlFor=\"doctor\">Name</label>\n                    <input type=\"text\" onChange={this.handleFieldChange} id=\"name\"/>\n                    <label htmlFor=\"location\">Location</label>\n                    <input type=\"text\" onChange={this.handleFieldChange} id=\"location\"/>\n                </div>\n                </form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color={this.state.location ?\"success\" : \"primary\"} onClick={this.addDoctor}>Save</Button>{' '}\n                    <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                </ModalFooter>\n                </Modal>\n                </div>\n\n                <section className=\"appointment-list\">\n                    {sortedApts.map(appointment =>\n                    (\n                        <div key={appointment.id}>\n                        <AppointmentCard key={appointment.id} appointment={appointment} {...this.props} />\n                        </div>\n\n                    ))}\n                </section>\n\n                <Button color=\"success\" type=\"submit\" id=\"add-appointment-button\" onClick={() => {\n                        this.props.history.push(\"/appointment/new\")\n                    }} >\n                        Add\n                </Button>\n                <NewAppointmentForm/>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}