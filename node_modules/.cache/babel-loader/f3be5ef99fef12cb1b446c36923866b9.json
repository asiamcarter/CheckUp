{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/appointments/NewAppointmentForm.js\";\nimport React, { Component } from \"react\";\nimport { throws } from \"assert\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar NewAppointmentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewAppointmentForm, _Component);\n\n  function NewAppointmentForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewAppointmentForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewAppointmentForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userId: \"\",\n      doctorId: \"\",\n      name: \"\",\n      location: \"\",\n      time: \"\",\n      date: \"\",\n      reason: \"\",\n      note: \"\",\n      timestamp: \"\",\n      audio: \"\",\n      photo: \"\",\n      modal: false\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.handleIdFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = JSON.parse(evt.target.value);\n\n      _this.setState(stateToChange);\n    };\n\n    _this.toggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    };\n\n    _this.getDoctors = function () {\n      var doctors = _this.props.allDoctors.map(function (doctor) {\n        if (doctor.userId === Number(sessionStorage.getItem(\"User\"))) {\n          var doctorId = JSON.parse(doctor.id);\n          return React.createElement(\"option\", {\n            key: doctorId,\n            value: doctor.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, doctor.name);\n        }\n      });\n\n      return doctors;\n    };\n\n    _this.getDoctorLocation = function () {\n      var doctors = _this.props.allDoctors.map(function (doctor) {\n        if (_this.state.doctorId === doctor.id) {\n          return React.createElement(\"p\", {\n            key: doctor.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, doctor.location);\n        }\n      });\n\n      return doctors;\n    };\n\n    _this.addAppointment = function (evt) {\n      evt.preventDefault();\n      var newAppointmentObject = {\n        userId: Number(sessionStorage.getItem(\"User\")),\n        doctorId: _this.state.doctorId,\n        time: _this.state.time,\n        date: _this.state.date,\n        reason: _this.state.reason,\n        note: _this.state.note,\n        timestamp: _this.state.timestamp,\n        audio: _this.state.audio,\n        photo: _this.state.photo\n      };\n\n      _this.props.addAppointment(newAppointmentObject);\n\n      _this.toggle();\n    };\n\n    return _this;\n  }\n\n  _createClass(NewAppointmentForm, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"Session User\", Number(sessionStorage.getItem(\"User\")));\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        onClick: this.toggle,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \" \", this.props.buttonLabel, React.createElement(\"h1\", {\n        className: \"add-h1\",\n        id: \"add-doctor-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Add\")), React.createElement(\"div\", {\n        className: \"centerModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.modal,\n        className: \"modal-sm\",\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Add New Doctor\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Add New Appointment\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"doctor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Doctor\"), React.createElement(\"select\", {\n        id: \"doctorId\",\n        required: true,\n        onChange: this.handleIdFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Select your doctor\"), this.getDoctors()), this.getDoctorLocation()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"input\", {\n        type: \"time\",\n        onChange: this.handleFieldChange,\n        id: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"input\", {\n        type: \"date\",\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"reason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Reason\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleFieldChange,\n        id: \"reason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.addAppointment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Add\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.addAppointment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return NewAppointmentForm;\n}(Component);\n\nexport { NewAppointmentForm as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/appointments/NewAppointmentForm.js"],"names":["React","Component","throws","Button","Modal","ModalHeader","ModalBody","ModalFooter","NewAppointmentForm","state","userId","doctorId","name","location","time","date","reason","note","timestamp","audio","photo","modal","handleFieldChange","evt","stateToChange","target","id","value","setState","handleIdFieldChange","JSON","parse","toggle","prevState","getDoctors","doctors","props","allDoctors","map","doctor","Number","sessionStorage","getItem","getDoctorLocation","addAppointment","preventDefault","newAppointmentObject","console","log","buttonLabel"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { throws } from \"assert\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport default class NewAppointmentForm extends Component {\n    state = {\n        userId: \"\",\n        doctorId: \"\",\n        name: \"\",\n        location: \"\",\n        time: \"\",\n        date: \"\",\n        reason: \"\",\n        note: \"\",\n        timestamp: \"\",\n        audio: \"\",\n        photo: \"\",\n        modal: false\n    }\n\n    handleFieldChange = evt => {\n        const stateToChange = {};\n        stateToChange[evt.target.id] = evt.target.value;\n        this.setState(stateToChange);\n    }\n\n\n    handleIdFieldChange = evt => {\n        const stateToChange = {};\n        stateToChange[evt.target.id] = JSON.parse(evt.target.value);\n        this.setState(stateToChange)\n    }\n\n    toggle= () => {\n        this.setState(prevState => ({\n          modal: !prevState.modal\n        }));\n      }\n\n    getDoctors = () => {\n        let doctors = this.props.allDoctors.map(doctor => {\n\n        if (doctor.userId === Number(sessionStorage.getItem(\"User\"))) {\n                let doctorId = JSON.parse(doctor.id)\n                return (\n                <option key={doctorId}  value={doctor.id}>{doctor.name}</option>\n                )\n            }\n        })\n        return doctors\n    }\n\n    getDoctorLocation = () => {\n        let doctors = this.props.allDoctors.map(doctor => {\n            if (this.state.doctorId === doctor.id) {\n                return (\n                    <p key={doctor.id}>{doctor.location}</p>\n                )\n            }\n        })\n        return doctors\n    }\n\n    addAppointment = evt => {\n        evt.preventDefault();\n\n        const newAppointmentObject = {\n            userId: Number(sessionStorage.getItem(\"User\")),\n            doctorId: this.state.doctorId,\n            time: this.state.time,\n            date: this.state.date,\n            reason: this.state.reason,\n            note: this.state.note,\n            timestamp: this.state.timestamp,\n            audio: this.state.audio,\n            photo: this.state.photo\n        }\n\n        this.props.addAppointment(newAppointmentObject)\n        this.toggle()\n    }\n    render() {\n        console.log(\"Session User\", Number(sessionStorage.getItem(\"User\")))\n\n        return (\n            <>\n                {/* <form>\n\n                    <h2>Add New Appointment</h2>\n                    <div>\n                        <label htmlFor=\"doctor\">Doctor</label>\n                        <select id=\"doctorId\" required onChange={this.handleIdFieldChange}>\n                        <option>Select your doctor</option>\n                            {this.getDoctors()}\n                        </select>\n                        {this.getDoctorLocation()}\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"time\">Time</label>\n                        <input type=\"time\" onChange={this.handleFieldChange} id=\"time\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"date\">Date</label>\n                        <input type=\"date\" onChange={this.handleFieldChange} id=\"date\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"reason\">Reason</label>\n                        <input type=\"text\" onChange={this.handleFieldChange} id=\"reason\" />\n                    </div>\n\n                    <button type=\"submit\" onClick={this.addAppointment} >\n                        Add</button>\n                </form> */}\n\n\n\n                <Button onClick={this.toggle} size=\"sm\"> {this.props.buttonLabel}\n                             <h1 className=\"add-h1\" id=\"add-doctor-button\">\n                               Add\n                            </h1>\n                        </Button>\n\n\n\n                        <div className=\"centerModal\">\n                <Modal isOpen={this.state.modal} className=\"modal-sm\" toggle={this.toggle} >\n                <ModalHeader toggle={this.toggle}>Add New Doctor</ModalHeader>\n                <ModalBody >\n\n                <form>\n\n                    <h2>Add New Appointment</h2>\n                    <div>\n                        <label htmlFor=\"doctor\">Doctor</label>\n                        <select id=\"doctorId\" required onChange={this.handleIdFieldChange}>\n                        <option>Select your doctor</option>\n                            {this.getDoctors()}\n                        </select>\n                        {this.getDoctorLocation()}\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"time\">Time</label>\n                        <input type=\"time\" onChange={this.handleFieldChange} id=\"time\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"date\">Date</label>\n                        <input type=\"date\" onChange={this.handleFieldChange} id=\"date\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"reason\">Reason</label>\n                        <input type=\"text\" onChange={this.handleFieldChange} id=\"reason\" />\n                    </div>\n\n                    <button type=\"submit\" onClick={this.addAppointment} >\n                        Add</button>\n                    </form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={this.addAppointment}>Save</Button>{' '}\n                    <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                </ModalFooter>\n                </Modal>\n                </div>\n            </>\n        )\n\n    }\n}"]},"metadata":{},"sourceType":"module"}