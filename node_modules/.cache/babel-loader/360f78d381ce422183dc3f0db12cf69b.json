{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/appointments/EditAppointmentForm.js\";\nimport React, { Component } from \"react\";\nimport DataManager from \"../../modules/DataManager\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar EditAppointmentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditAppointmentForm, _Component);\n\n  function EditAppointmentForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditAppointmentForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditAppointmentForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userId: \"\",\n      doctorId: \"\",\n      time: \"\",\n      date: \"\",\n      reason: \"\",\n      note: \"\",\n      timestamp: \"\",\n      audio: \"\",\n      photo: \"\",\n      modal: false\n    };\n\n    _this.toggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    };\n\n    _this.getDoctors = function () {\n      var doctors = _this.props.allDoctors.map(function (doctor) {\n        if (doctor.userId === Number(sessionStorage.getItem(\"User\"))) {\n          var doctorId = JSON.parse(doctor.id);\n          return React.createElement(\"option\", {\n            key: doctorId,\n            value: doctor.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, doctor.name);\n        }\n      });\n\n      return doctors;\n    };\n\n    _this.getDoctorLocation = function () {\n      var doctors = _this.props.allDoctors.map(function (doctor) {\n        if (_this.state.doctorId === doctor.id) {\n          return React.createElement(\"p\", {\n            key: doctor.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, doctor.location);\n        }\n      });\n\n      return doctors;\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n\n      console.log(stateToChange);\n      console.log(_this.state);\n    };\n\n    _this.editAppointment = function (evt) {\n      evt.preventDefault();\n      var newAppointmentObject = {\n        userId: _this.state.userId,\n        doctorId: _this.state.doctorId,\n        time: _this.state.time,\n        date: _this.state.date,\n        reason: _this.state.reason,\n        note: _this.state.note,\n        timestamp: new Date(),\n        audio: _this.state.audio,\n        photo: _this.state.photo,\n        id: _this.state.id\n      };\n\n      _this.props.editAppointment(_this.props.appointment.id, newAppointmentObject);\n\n      console.log(evt.target);\n\n      _this.toggle();\n    };\n\n    return _this;\n  }\n\n  _createClass(EditAppointmentForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      DataManager.getById(this.props.appointment.id, \"appointments\").then(function (appointment) {\n        console.log(\"appointment\", appointment);\n\n        _this2.setState({\n          userId: appointment.userId,\n          doctorId: appointment.doctorId,\n          time: appointment.time,\n          date: appointment.date,\n          reason: appointment.reason,\n          note: appointment.note,\n          timestamp: appointment.timestamp,\n          audio: appointment.audio,\n          photo: appointment.photo,\n          id: appointment.id\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        onClick: this.toggle,\n        color: \"success\",\n        id: \"add-appointment-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \" \", this.props.buttonLabel, React.createElement(\"h1\", {\n        className: \"add-h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Edit\")), React.createElement(\"div\", {\n        className: \"centerModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Edit Appointment\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"doctor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Doctor\"), React.createElement(\"select\", {\n        id: \"doctorId\",\n        required: true,\n        onChange: this.handleIdFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Select your doctor\"), this.getDoctors()), this.getDoctorLocation()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"input\", {\n        type: \"time\",\n        onChange: this.handleFieldChange,\n        id: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"input\", {\n        type: \"date\",\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"reason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Reason\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleFieldChange,\n        id: \"reason\",\n        placeholder: this.state.reason,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })))), React.createElement(ModalFooter, {\n        id: this.props.appointment.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        onClick: this.editAppointment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return EditAppointmentForm;\n}(Component);\n\nexport { EditAppointmentForm as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/appointments/EditAppointmentForm.js"],"names":["React","Component","DataManager","Button","Modal","ModalHeader","ModalBody","ModalFooter","EditAppointmentForm","state","userId","doctorId","time","date","reason","note","timestamp","audio","photo","modal","toggle","setState","prevState","getDoctors","doctors","props","allDoctors","map","doctor","Number","sessionStorage","getItem","JSON","parse","id","name","getDoctorLocation","location","handleFieldChange","evt","stateToChange","target","value","console","log","editAppointment","preventDefault","newAppointmentObject","Date","appointment","getById","then","buttonLabel","handleIdFieldChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport DataManager from \"../../modules/DataManager\"\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport default class EditAppointmentForm extends Component {\n    state = {\n        userId: \"\",\n        doctorId: \"\",\n        time: \"\",\n        date: \"\",\n        reason: \"\",\n        note: \"\",\n        timestamp: \"\",\n        audio: \"\",\n        photo: \"\",\n        modal: false\n    }\n\n    componentDidMount() {\n        DataManager.getById(this.props.appointment.id, \"appointments\").then(appointment => {\n            console.log(\"appointment\", appointment)\n            this.setState({\n                userId: appointment.userId,\n                doctorId: appointment.doctorId,\n                time: appointment.time,\n                date: appointment.date,\n                reason: appointment.reason,\n                note: appointment.note,\n                timestamp: appointment.timestamp,\n                audio: appointment.audio,\n                photo: appointment.photo,\n                id: appointment.id\n            })\n        })\n    }\n\n    toggle= () => {\n        this.setState(prevState => ({\n          modal: !prevState.modal\n        }));\n      }\n\n      getDoctors = () => {\n        let doctors = this.props.allDoctors.map(doctor => {\n\n        if (doctor.userId === Number(sessionStorage.getItem(\"User\"))) {\n                let doctorId = JSON.parse(doctor.id)\n                return (\n                <option key={doctorId}  value={doctor.id}>{doctor.name}</option>\n                )\n            }\n        })\n        return doctors\n    }\n\n    getDoctorLocation = () => {\n        let doctors = this.props.allDoctors.map(doctor => {\n            if (this.state.doctorId === doctor.id) {\n                return (\n                    <p key={doctor.id}>{doctor.location}</p>\n                )\n            }\n        })\n        return doctors\n    }\n\n    handleFieldChange = evt => {\n        const stateToChange = {};\n        stateToChange[evt.target.id] = evt.target.value;\n        this.setState(stateToChange);\n        console.log(stateToChange)\n        console.log(this.state)\n    }\n    editAppointment = (evt) => {\n        evt.preventDefault();\n        const newAppointmentObject = {\n            userId: this.state.userId,\n            doctorId: this.state.doctorId,\n            time: this.state.time,\n            date: this.state.date,\n            reason: this.state.reason,\n            note: this.state.note,\n            timestamp: new Date(),\n            audio: this.state.audio,\n            photo: this.state.photo,\n            id: this.state.id\n        }\n         this.props.editAppointment(this.props.appointment.id, newAppointmentObject)\n        console.log(evt.target)\n         this.toggle()\n    }\n\n    render() {\n        console.log(this.props)\n        return (\n            <>\n\n<Button onClick={this.toggle} color=\"success\" id=\"add-appointment-button\"> {this.props.buttonLabel}\n                             <h1 className=\"add-h1\">\n                               Edit\n                            </h1>\n                        </Button>\n\n\n\n                        <div className=\"centerModal\">\n                <Modal isOpen={this.state.modal} toggle={this.toggle} >\n                <ModalHeader toggle={this.toggle}>Edit</ModalHeader>\n                <ModalBody >\n\n                <form>\n\n                    <h2>Edit Appointment</h2>\n                    <div>\n    <label htmlFor=\"doctor\">Doctor</label>\n    <select id=\"doctorId\" required onChange={this.handleIdFieldChange}>\n    <option>Select your doctor</option>\n        {this.getDoctors()}\n    </select>\n    {this.getDoctorLocation()}\n</div>\n\n<div>\n    <label htmlFor=\"time\">Time</label>\n    <input type=\"time\" onChange={this.handleFieldChange} id=\"time\" />\n</div>\n<div>\n    <label htmlFor=\"date\">Date</label>\n    <input type=\"date\" onChange={this.handleFieldChange} id=\"date\" />\n</div>\n<div>\n    <label htmlFor=\"reason\">Reason</label>\n    <input type=\"text\" onChange={this.handleFieldChange} id=\"reason\" placeholder={this.state.reason} />\n</div>\n</form>\n\n                </ModalBody>\n                <ModalFooter id={this.props.appointment.id}>\n                    <Button color=\"success\" onClick={this.editAppointment}>Save</Button>{' '}\n                    <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                </ModalFooter>\n                </Modal>\n                </div>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}