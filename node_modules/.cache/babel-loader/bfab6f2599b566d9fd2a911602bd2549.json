{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/ApplicationViews.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./nav/NavBar\";\nimport { Route } from \"react-router-dom\"; // import { Redirect } from \"react-router-dom\"\n\nimport SymptomList from \"./symptoms/SymptomList\"; // import Login from \"./login/Login\"\n\nimport Register from \"./login/Register\";\nimport DataManager from \"../modules/DataManager\"; // import TrackNavBar from \"./nav/TrackNavBar\"\n\nvar ApplicationViews =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ApplicationViews, _Component);\n\n  function ApplicationViews() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ApplicationViews);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ApplicationViews)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      users: [],\n      symptoms: [],\n      medications: [],\n      appointments: [],\n      notes: [],\n      doctors: []\n    };\n\n    _this.isAuthenticated = function () {\n      return sessionStorage.getItem(\"User\") !== null;\n    };\n\n    return _this;\n  }\n\n  _createClass(ApplicationViews, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var newState = {};\n      DataManager.getAll(\"users\").then(function (allUsers) {\n        return newState.users = allUsers;\n      }).then(function () {\n        return DataManager.getAll(\"symptoms\");\n      }).then(function (allSymptoms) {\n        return newState.symptoms = allSymptoms;\n      }).then(function () {\n        return DataManager.getAll(\"medications\");\n      }).then(function (allMedications) {\n        return newState.medications = allMedications;\n      }).then(function () {\n        return DataManager.getAll(\"appointments\");\n      }).then(function (allAppointments) {\n        return newState.appointments = allAppointments;\n      }).then(function () {\n        return DataManager.getAll(\"notes\");\n      }).then(function (allNotes) {\n        return newState.notes = allNotes;\n      }).then(function () {\n        return DataManager.getAll(\"doctors\");\n      }).then(function (allDoctors) {\n        return newState.doctors = allDoctors;\n      }).then(function () {\n        return _this2.setState(newState);\n      }).then(function () {\n        console.log(\"componentDidMount:\", _this2.state);\n      });\n    }\n  }, {\n    key: \"registerUser\",\n    value: function registerUser(username, password) {\n      DataManager.getUsers(username, password);\n    }\n  }, {\n    key: \"getUsers\",\n    value: function getUsers() {\n      var _this3 = this;\n\n      DataManager.getAll(\"users\").then(function (allUsers) {\n        _this3.setState({\n          users: allUsers\n        });\n      });\n    }\n  }, {\n    key: \"postUser\",\n    value: function postUser(newUser) {\n      var _this4 = this;\n\n      DataManager.postUser(newUser).then(function () {\n        return DataManager.getAll(\"users\");\n      }).then(function () {\n        return _this4.registerUser(newUser.name, newUser.password);\n      });\n    }\n  }, {\n    key: \"showNav\",\n    value: function showNav() {\n      if (this.isAuthenticated()) {\n        return React.createElement(NavBar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(React.Fragment, null, this.showNav(), React.createElement(Route, {\n        exact: true,\n        path: \"/track\",\n        render: function render(props) {\n          return React.createElement(SymptomList, Object.assign({}, props, {\n            symptoms: _this5.props.symptoms,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/register\",\n        render: function render(props) {\n          return React.createElement(Register, Object.assign({}, props, {\n            getUsers: _this5.getUsers,\n            postUser: _this5.postUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ApplicationViews;\n}(Component);\n\nexport { ApplicationViews as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/ApplicationViews.js"],"names":["React","Component","NavBar","Route","SymptomList","Register","DataManager","ApplicationViews","state","users","symptoms","medications","appointments","notes","doctors","isAuthenticated","sessionStorage","getItem","newState","getAll","then","allUsers","allSymptoms","allMedications","allAppointments","allNotes","allDoctors","setState","console","log","username","password","getUsers","newUser","postUser","registerUser","name","showNav","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport NavBar from \"./nav/NavBar\"\nimport { Route } from \"react-router-dom\"\n// import { Redirect } from \"react-router-dom\"\nimport SymptomList from \"./symptoms/SymptomList\"\n// import Login from \"./login/Login\"\nimport Register from \"./login/Register\"\nimport DataManager from \"../modules/DataManager\"\n// import TrackNavBar from \"./nav/TrackNavBar\"\n\nexport default class ApplicationViews extends\nComponent {\n\n    state= {\n        users: [],\n        symptoms: [],\n        medications: [],\n        appointments: [],\n        notes: [],\n        doctors: []\n\n    }\n\n    componentDidMount() {\n        const newState= {}\n        DataManager.getAll(\"users\").then(allUsers => newState.users = allUsers)\n        .then(()=> DataManager.getAll(\"symptoms\")).then(allSymptoms => newState.symptoms = allSymptoms)\n        .then(() => DataManager.getAll(\"medications\")).then(allMedications => newState.medications = allMedications)\n        .then(() => DataManager.getAll(\"appointments\")).then(allAppointments => newState.appointments = allAppointments)\n        .then(()=> DataManager.getAll(\"notes\")).then(allNotes => newState.notes = allNotes)\n        .then(()=> DataManager.getAll(\"doctors\")).then(allDoctors => newState.doctors = allDoctors)\n        .then(() => this.setState(newState))\n        .then(()=> {console.log(\"componentDidMount:\", this.state)})\n    }\n\n    registerUser(username, password) {\n        DataManager.getUsers(username, password)\n\n    }\n    isAuthenticated = () => sessionStorage.getItem(\"User\") !== null\n\n    getUsers() {\n        DataManager.getAll(\"users\").then(allUsers => {this.setState({users: allUsers})})\n    }\n\n    postUser(newUser) {\n        DataManager.postUser(newUser).then(() => DataManager.getAll(\"users\")).then(()=> this.registerUser(newUser.name, newUser.password))\n    }\n\n    showNav() {\n        if(this.isAuthenticated()) {\n            return <NavBar />\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {this.showNav()}\n                <Route exact path=\"/track\" render={(props) => {\n                    return <SymptomList {...props} symptoms={this.props.symptoms} />\n                }} />\n                <Route exact path=\"/register\" render={(props) => {\n                    return <Register {...props} getUsers = {this.getUsers}\n                    postUser= {this.postUser} />\n                }} />\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}