{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/doctors/NewDoctorForm.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar NewDoctorForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewDoctorForm, _Component);\n\n  function NewDoctorForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewDoctorForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewDoctorForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      location: \"\"\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.addDoctor = function (evt) {\n      evt.preventDefault();\n      var newDoctor = {\n        name: _this.state.name,\n        location: _this.state.location,\n        userId: Number(sessionStorage.getItem(\"User\"))\n      };\n\n      _this.props.postNewDoctor(newDoctor).then(function () {\n        return alert(\"You're doctor has been added!\");\n      }, _this.props.history.push(\"/appointments\"));\n    };\n\n    return _this;\n  }\n\n  _createClass(NewDoctorForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        onClick: this.toggle,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \" \", this.props.buttonLabel, React.createElement(\"h1\", {\n        className: \"add-h1\",\n        id: \"add-doctor-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Add Doctor\")), React.createElement(\"div\", {\n        className: \"centerModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.modal,\n        className: \"modal-sm\",\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Add Doctor\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Add New Doctor\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"doctor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleFieldChange,\n        id: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Location\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleFieldChange,\n        id: \"location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.addDoctor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Add\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: this.state.location ? \"success\" : \"primary\",\n        onClick: this.addDoctor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Save\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return NewDoctorForm;\n}(Component);\n\nexport { NewDoctorForm as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/doctors/NewDoctorForm.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","NewDoctorForm","state","name","location","handleFieldChange","evt","stateToChange","target","id","value","setState","addDoctor","preventDefault","newDoctor","userId","Number","sessionStorage","getItem","props","postNewDoctor","then","alert","history","push","toggle","buttonLabel","modal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport default class NewDoctorForm extends Component {\n    state = {\n        name: \"\",\n        location: \"\"\n    }\n\n    handleFieldChange = evt => {\n        const stateToChange = {};\n        stateToChange[evt.target.id] = evt.target.value;\n        this.setState(stateToChange)\n    }\n\n    addDoctor = evt => {\n        evt.preventDefault();\n        const newDoctor = {\n            name: this.state.name,\n            location: this.state.location,\n            userId: Number(sessionStorage.getItem(\"User\"))\n        }\n        this.props.postNewDoctor(newDoctor).then(() =>\n            alert(\"You're doctor has been added!\"),\n            this.props.history.push(\"/appointments\"))\n    }\n\n    render() {\n        return (\n            <>\n            {/* <form>\n                <h2>Add New Doctor</h2>\n                <div>\n                    <label htmlFor=\"doctor\">Name</label>\n                    <input type=\"text\" onChange={this.handleFieldChange} id=\"name\"/>\n                    <label htmlFor=\"location\">Location</label>\n                    <input type=\"text\" onChange={this.handleFieldChange} id=\"location\"/>\n                </div>\n                <button type=\"submit\" onClick={this.addDoctor}>Add</button>\n                </form> */}\n\n                <Button onClick={this.toggle} size=\"sm\"> {this.props.buttonLabel}\n                             <h1 className=\"add-h1\" id=\"add-doctor-button\">\n                               Add Doctor\n                            </h1>\n                        </Button>\n\n\n\n                        <div className=\"centerModal\">\n                <Modal isOpen={this.state.modal} className=\"modal-sm\" toggle={this.toggle} >\n                <ModalHeader toggle={this.toggle}>Add Doctor</ModalHeader>\n                <ModalBody >\n\n                <form>\n                <h2>Add New Doctor</h2>\n                <div>\n                    <label htmlFor=\"doctor\">Name</label>\n                    <input type=\"text\" onChange={this.handleFieldChange} id=\"name\"/>\n                    <label htmlFor=\"location\">Location</label>\n                    <input type=\"text\" onChange={this.handleFieldChange} id=\"location\"/>\n                </div>\n                <button type=\"submit\" onClick={this.addDoctor}>Add</button>\n                </form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color={this.state.location ?\"success\" : \"primary\"} onClick={this.addDoctor}>Save</Button>{' '}\n                    <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                </ModalFooter>\n                </Modal>\n                </div>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}