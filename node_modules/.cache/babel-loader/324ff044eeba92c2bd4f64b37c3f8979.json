{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/symptoms/NewSymptomForm.js\";\nimport React, { Component } from \"react\";\n\nvar NewSymptomForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewSymptomForm, _Component);\n\n  function NewSymptomForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewSymptomForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewSymptomForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      intensity: \"\",\n      date: \"\",\n      time: \"\",\n      notes: \"\",\n      userId: \"\"\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n\n      console.log(stateToChange);\n    };\n\n    _this.addNewSymptom = function (evt) {\n      evt.preventDefault(); // let d = new Date();\n      // let day = d.getDate();\n      // let year = d.getFullYear();\n      // let month = (d.getMonth() + 1);\n      // let hours = (d.getHours()-12)\n      // let minutes = d.getMinutes()\n\n      var newSymptomObject = {\n        name: _this.props.match.params.symptomId,\n        intensity: _this.state.intensity,\n        date: _this.state.date,\n        time: _this.state.time,\n        notes: _this.state.notes,\n        userId: Number(sessionStorage.getItem(\"User\"))\n      };\n\n      _this.props.addSymptom(newSymptomObject).then(function () {\n        return _this.props.history.push(\"/trackedsymptoms\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewSymptomForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \" Add New Symptom \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.props.match.params.symptomId)), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"intensity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Intensity\"), React.createElement(\"div\", {\n        className: \"rating\",\n        onChange: this.handleFieldChange,\n        id: \"intensity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"rating\",\n        id: \"none\",\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"none\",\n        className: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"None\"), React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"rating\",\n        id: \"mild\",\n        value: \"mild\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"mild\",\n        className: \"mild\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Mild\"), React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"rating\",\n        id: \"med\",\n        value: \"med\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"med\",\n        className: \"med\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Med\"), React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"rating\",\n        id: \"severe\",\n        value: \"severe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"severe\",\n        className: \"severe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Severe\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"input\", {\n        type: \"date\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"input\", {\n        type: \"time\",\n        id: \"time\",\n        onChange: this.handleFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"notes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Notes\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"notes\",\n        onChange: this.handleFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#exampleModalLong\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Launch demo modal\"), React.createElement(\"div\", {\n        className: \"modal fade\",\n        id: \"exampleModalLong\",\n        tabIndex: \"-1\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"exampleModalLongTitle\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-dialog\",\n        role: \"document\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"modal-title\",\n        id: \"exampleModalLongTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Modal title\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"...\"), React.createElement(\"div\", {\n        className: \"modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        \"data-dismiss\": \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Save changes\"))))))));\n    }\n  }]);\n\n  return NewSymptomForm;\n}(Component);\n\nexport { NewSymptomForm as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/symptoms/NewSymptomForm.js"],"names":["React","Component","NewSymptomForm","state","name","intensity","date","time","notes","userId","handleFieldChange","evt","stateToChange","target","id","value","setState","console","log","addNewSymptom","preventDefault","newSymptomObject","props","match","params","symptomId","Number","sessionStorage","getItem","addSymptom","then","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\n\nexport default class NewSymptomForm extends Component {\n    state = {\n        name: \"\",\n        intensity: \"\",\n        date: \"\",\n        time: \"\",\n        notes: \"\",\n        userId: \"\"\n    }\n\n    handleFieldChange = evt => {\n        const stateToChange = {};\n        stateToChange[evt.target.id] = evt.target.value;\n        this.setState(stateToChange);\n        console.log(stateToChange)\n    }\n\n    //    getDate = function() {\n    //         var now = new Date();\n    //         var month = (now.getMonth() + 1);\n    //         var day = now.getDate();\n    //         if (month < 10)\n    //             month = \"0\" + month;\n    //         if (day < 10)\n    //             day = \"0\" + day;\n    //         var today = now.getFullYear() + '/' + month + '/' + day;\n    //         console.log(today)\n    //     }\n\n    addNewSymptom = evt => {\n        evt.preventDefault();\n        // let d = new Date();\n        // let day = d.getDate();\n        // let year = d.getFullYear();\n        // let month = (d.getMonth() + 1);\n        // let hours = (d.getHours()-12)\n        // let minutes = d.getMinutes()\n        const newSymptomObject = {\n            name: this.props.match.params.symptomId,\n            intensity: this.state.intensity,\n            date: this.state.date,\n            time: this.state.time,\n            notes: this.state.notes,\n            userId: Number(sessionStorage.getItem(\"User\"))\n        }\n        this.props.addSymptom(newSymptomObject)\n            .then(() => this.props.history.push(\"/trackedsymptoms\"))\n    }\n    render() {\n        return (\n            <>\n                <form>\n                    <h2> Add New Symptom </h2>\n                    <div>\n                        <h4>{this.props.match.params.symptomId}</h4>\n                        {/* <label htmlFor=\"name\">Name\n                    </label>\n                    <select id=\"name\" required onChange={this.handleFieldChange}>\n                        <option value=\"nausea\">Nausea</option>\n                        <option value=\"cough\">Cough</option>\n                        <option value=\"headache\">Headache</option>\n                        <option value=\"pain\">Pain</option>\n                    </select> */}\n                    </div>\n                    <div className=\"box\">\n                        <p className=\"intensity\">Intensity</p>\n                        <div className=\"rating\" onChange={this.handleFieldChange} id=\"intensity\">\n\n                            <input type=\"radio\" name=\"rating\" id=\"none\" value=\"none\" /><label htmlFor=\"none\" className=\"none\"\n                            >None</label>\n\n                            <input type=\"radio\" name=\"rating\" id=\"mild\" value=\"mild\" /><label htmlFor=\"mild\" className=\"mild\">Mild</label>\n                            <input type=\"radio\" name=\"rating\" id=\"med\" value=\"med\" /><label htmlFor=\"med\" className=\"med\">Med</label>\n                            <input type=\"radio\" name=\"rating\" id=\"severe\" value=\"severe\" /><label htmlFor=\"severe\" className=\"severe\">Severe</label>\n\n                        </div>\n                    </div>\n                    <div>\n                        <label htmlFor=\"date\">Date</label>\n                        <input type=\"date\" required onChange={this.handleFieldChange} id=\"date\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"time\">Time</label>\n                        <input type=\"time\" id=\"time\" onChange={this.handleFieldChange} />\n                    </div>\n                    <div>\n                        <label htmlFor=\"notes\">Notes</label>\n                        <input type=\"text\" id=\"notes\" onChange={this.handleFieldChange} />\n                    </div>\n                    <div>\n                    {/* <!-- Button trigger modal --> */}\n<button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalLong\">\n  Launch demo modal\n</button>\n\n{/* <!-- Modal --> */}\n<div className=\"modal fade\" id=\"exampleModalLong\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n  <div className=\"modal-dialog\" role=\"document\">\n    <div className=\"modal-content\">\n      <div className=\"modal-header\">\n        <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Modal title</h5>\n        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"modal-body\">\n        ...\n      </div>\n      <div className=\"modal-footer\">\n        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n        <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n                        {/* <button type=\"submit\" onClick={this.addNewSymptom} >\n                            Add</button> */}\n                    </div>\n                </form>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}