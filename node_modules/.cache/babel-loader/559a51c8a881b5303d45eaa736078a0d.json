{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/appointments/NewAppointmentForm.js\";\nimport React, { Component } from \"react\";\n\nvar NewAppointmentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewAppointmentForm, _Component);\n\n  function NewAppointmentForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewAppointmentForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewAppointmentForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userId: \"\",\n      doctorId: \"\",\n      name: \"\",\n      location: \"\",\n      time: \"\",\n      date: \"\",\n      reason: \"\",\n      note: \"\",\n      timestamp: \"\",\n      audio: \"\",\n      photo: \"\"\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.handleIdFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = JSON.parse(evt.target.value);\n\n      _this.setState(stateToChange);\n    };\n\n    _this.getDoctors = function () {\n      var doctors = _this.props.allDoctors.map(function (doctor) {\n        var doctorId = JSON.parse(doctor.id);\n\n        if (doctor.userId === Number(sessionStorage.getItem(\"user\"))) {\n          return React.createElement(\"option\", {\n            key: doctorId,\n            value: doctor.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, doctor.name);\n        }\n      });\n\n      return doctors;\n    };\n\n    _this.addAppointment = function (evt) {\n      evt.preventDefault();\n      var newAppointmentObject = {\n        userId: Number(sessionStorage.getItem(\"User\")),\n        doctorId: _this.state.doctorId,\n        time: _this.state.time,\n        date: _this.state.date,\n        reason: _this.state.reason,\n        note: _this.state.note,\n        timestamp: _this.state.timestamp,\n        audio: _this.state.audio,\n        photo: _this.state.photo\n      };\n\n      _this.props.addAppointment(newAppointmentObject).then(function () {\n        return _this.props.history.push(\"/appointments\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewAppointmentForm, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.doctorId);\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Add New Appointment\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"doctor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Doctor\"), React.createElement(\"select\", {\n        id: \"doctorId\",\n        required: true,\n        onChange: this.handleIdFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.getDoctors())), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"input\", {\n        type: \"time\",\n        onChange: this.handleFieldChange,\n        id: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"input\", {\n        type: \"date\",\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"reason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Reason\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleFieldChange,\n        id: \"reason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.addAppointment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return NewAppointmentForm;\n}(Component);\n\nexport { NewAppointmentForm as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/appointments/NewAppointmentForm.js"],"names":["React","Component","NewAppointmentForm","state","userId","doctorId","name","location","time","date","reason","note","timestamp","audio","photo","handleFieldChange","evt","stateToChange","target","id","value","setState","handleIdFieldChange","JSON","parse","getDoctors","doctors","props","allDoctors","map","doctor","Number","sessionStorage","getItem","addAppointment","preventDefault","newAppointmentObject","then","history","push","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,kB;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,IAAI,EAAE,EALF;AAMJC,MAAAA,IAAI,EAAE,EANF;AAOJC,MAAAA,MAAM,EAAE,EAPJ;AAQJC,MAAAA,IAAI,EAAE,EARF;AASJC,MAAAA,SAAS,EAAE,EATP;AAUJC,MAAAA,KAAK,EAAE,EAVH;AAWJC,MAAAA,KAAK,EAAE;AAXH,K;;UAcRC,iB,GAAoB,UAAAC,GAAG,EAAI;AACvB,UAAMC,aAAa,GAAG,EAAtB;AACAA,MAAAA,aAAa,CAACD,GAAG,CAACE,MAAJ,CAAWC,EAAZ,CAAb,GAA+BH,GAAG,CAACE,MAAJ,CAAWE,KAA1C;;AACA,YAAKC,QAAL,CAAcJ,aAAd;AACH,K;;UAEDK,mB,GAAsB,UAAAN,GAAG,EAAI;AACzB,UAAMC,aAAa,GAAG,EAAtB;AACAA,MAAAA,aAAa,CAACD,GAAG,CAACE,MAAJ,CAAWC,EAAZ,CAAb,GAA+BI,IAAI,CAACC,KAAL,CAAWR,GAAG,CAACE,MAAJ,CAAWE,KAAtB,CAA/B;;AACA,YAAKC,QAAL,CAAcJ,aAAd;AACH,K;;UAEDQ,U,GAAa,YAAM;AACf,UAAIC,OAAO,GAAG,MAAKC,KAAL,CAAWC,UAAX,CAAsBC,GAAtB,CAA0B,UAAAC,MAAM,EAAI;AAC9C,YAAIzB,QAAQ,GAAGkB,IAAI,CAACC,KAAL,CAAWM,MAAM,CAACX,EAAlB,CAAf;;AACA,YAAIW,MAAM,CAAC1B,MAAP,KAAkB2B,MAAM,CAACC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAD,CAA5B,EAA6D;AAC7D,iBACM;AAAQ,YAAA,GAAG,EAAE5B,QAAb;AAAuB,YAAA,KAAK,EAAEyB,MAAM,CAACX,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0CW,MAAM,CAACxB,IAAjD,CADN;AAIC;AACJ,OARa,CAAd;;AASA,aAAOoB,OAAP;AACH,K;;UAEDQ,c,GAAiB,UAAAlB,GAAG,EAAI;AACpBA,MAAAA,GAAG,CAACmB,cAAJ;AAEA,UAAMC,oBAAoB,GAAG;AACzBhC,QAAAA,MAAM,EAAE2B,MAAM,CAACC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAD,CADW;AAEzB5B,QAAAA,QAAQ,EAAE,MAAKF,KAAL,CAAWE,QAFI;AAGzBG,QAAAA,IAAI,EAAE,MAAKL,KAAL,CAAWK,IAHQ;AAIzBC,QAAAA,IAAI,EAAE,MAAKN,KAAL,CAAWM,IAJQ;AAKzBC,QAAAA,MAAM,EAAE,MAAKP,KAAL,CAAWO,MALM;AAMzBC,QAAAA,IAAI,EAAE,MAAKR,KAAL,CAAWQ,IANQ;AAOzBC,QAAAA,SAAS,EAAE,MAAKT,KAAL,CAAWS,SAPG;AAQzBC,QAAAA,KAAK,EAAE,MAAKV,KAAL,CAAWU,KARO;AASzBC,QAAAA,KAAK,EAAE,MAAKX,KAAL,CAAWW;AATO,OAA7B;;AAYA,YAAKa,KAAL,CAAWO,cAAX,CAA0BE,oBAA1B,EACKC,IADL,CACU;AAAA,eACN,MAAKV,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAwB,eAAxB,CADM;AAAA,OADV;AAGH,K;;;;;;;6BACQ;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtC,KAAL,CAAWE,QAAvB;AACA,aACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,QAAA,EAAE,EAAC,UAAX;AAAsB,QAAA,QAAQ,MAA9B;AAA+B,QAAA,QAAQ,EAAE,KAAKiB,mBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKG,UAAL,EADL,CAFJ,CAHJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKV,iBAAlC;AAAqD,QAAA,EAAE,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAbJ,EAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKA,iBAAlC;AAAqD,QAAA,EAAE,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAjBJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKA,iBAAlC;AAAqD,QAAA,EAAE,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CArBJ,EA0BI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKmB,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA1BJ,CADJ,CADJ;AAiCH;;;;EA9F2CjC,S;;SAA3BC,kB","sourcesContent":["import React, { Component } from \"react\"\n\nexport default class NewAppointmentForm extends Component {\n    state = {\n        userId: \"\",\n        doctorId: \"\",\n        name: \"\",\n        location: \"\",\n        time: \"\",\n        date: \"\",\n        reason: \"\",\n        note: \"\",\n        timestamp: \"\",\n        audio: \"\",\n        photo: \"\"\n    }\n\n    handleFieldChange = evt => {\n        const stateToChange = {};\n        stateToChange[evt.target.id] = evt.target.value;\n        this.setState(stateToChange);\n    }\n\n    handleIdFieldChange = evt => {\n        const stateToChange = {};\n        stateToChange[evt.target.id] = JSON.parse(evt.target.value);\n        this.setState(stateToChange)\n    }\n\n    getDoctors = () => {\n        let doctors = this.props.allDoctors.map(doctor => {\n            let doctorId = JSON.parse(doctor.id)\n            if (doctor.userId === Number(sessionStorage.getItem(\"user\"))){\n            return (\n                  <option key={doctorId} value={doctor.id}>{doctor.name}</option>\n\n            )\n            }\n        })\n        return doctors\n    }\n\n    addAppointment = evt => {\n        evt.preventDefault();\n\n        const newAppointmentObject = {\n            userId: Number(sessionStorage.getItem(\"User\")),\n            doctorId: this.state.doctorId,\n            time: this.state.time,\n            date: this.state.date,\n            reason: this.state.reason,\n            note: this.state.note,\n            timestamp: this.state.timestamp,\n            audio: this.state.audio,\n            photo: this.state.photo\n        }\n\n        this.props.addAppointment(newAppointmentObject)\n            .then(() =>\n            this.props.history.push(\"/appointments\"))\n    }\n    render() {\n        console.log(this.state.doctorId)\n        return (\n            <>\n                <form>\n\n                    <h2>Add New Appointment</h2>\n                    <div>\n                        <label htmlFor=\"doctor\">Doctor</label>\n                        <select id=\"doctorId\" required onChange={this.handleIdFieldChange}>\n                            {this.getDoctors()}\n                        </select>\n                    </div>\n                    {/* <div>\n                        <label htmlFor=\"location\">Location</label>\n                        <input type=\"text\" onChange={this.handleFieldChange} id=\"location\" />\n                    </div> */}\n                    <div>\n                        <label htmlFor=\"time\">Time</label>\n                        <input type=\"time\" onChange={this.handleFieldChange} id=\"time\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"date\">Date</label>\n                        <input type=\"date\" onChange={this.handleFieldChange} id=\"date\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"reason\">Reason</label>\n                        <input type=\"text\" onChange={this.handleFieldChange} id=\"reason\" />\n                    </div>\n\n                    <button type=\"submit\" onClick={this.addAppointment} >\n                        Add</button>\n                </form>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}