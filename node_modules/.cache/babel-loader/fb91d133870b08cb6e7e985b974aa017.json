{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/ApplicationViews.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./nav/NavBar\";\nimport { Route } from \"react-router-dom\"; // import { Redirect } from \"react-router-dom\"\n\nimport SymptomList from \"./symptoms/SymptomList\";\nimport Login from \"./login/Login\";\nimport Register from \"./login/Register\";\nimport DataManager from \"../modules/DataManager\"; // import TrackNavBar from \"./nav/TrackNavBar\"\n\nimport Homepage from \"./homepage/Homepage\";\nimport NewSymptomForm from \"./symptoms/NewSymptomForm\";\n\nvar ApplicationViews =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ApplicationViews, _Component);\n\n  function ApplicationViews() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ApplicationViews);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ApplicationViews)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      users: [],\n      symptoms: [],\n      medications: [],\n      appointments: [],\n      notes: [],\n      doctors: []\n    };\n\n    _this.isAuthenticated = function () {\n      return sessionStorage.getItem(\"User\") !== null;\n    };\n\n    _this.addSymptom = function (newSymptom) {\n      DataManager.postSymptom(newSymptom).then(function () {\n        DataManager.getAll(\"symptoms\").then(function (allSymptoms) {\n          return _this.setState({\n            symptoms: allSymptoms\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ApplicationViews, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var newState = {};\n      DataManager.getAll(\"users\").then(function (allUsers) {\n        return newState.users = allUsers;\n      }).then(function () {\n        return DataManager.getAll(\"symptoms\");\n      }).then(function (allSymptoms) {\n        return newState.symptoms = allSymptoms;\n      }).then(function () {\n        return DataManager.getAll(\"medications\");\n      }).then(function (allMedications) {\n        return newState.medications = allMedications;\n      }).then(function () {\n        return DataManager.getAll(\"appointments\");\n      }).then(function (allAppointments) {\n        return newState.appointments = allAppointments;\n      }).then(function () {\n        return DataManager.getAll(\"notes\");\n      }).then(function (allNotes) {\n        return newState.notes = allNotes;\n      }).then(function () {\n        return DataManager.getAll(\"doctors\");\n      }).then(function (allDoctors) {\n        return newState.doctors = allDoctors;\n      }).then(function () {\n        return _this2.setState(newState);\n      }).then(function () {\n        console.log(\"COMPONENTDIDMOUNT:\", _this2.state);\n      });\n    } //authentication\n\n  }, {\n    key: \"showNav\",\n    value: function showNav() {\n      if (this.isAuthenticated()) {\n        return React.createElement(NavBar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      }\n    } //login/registration\n\n  }, {\n    key: \"registerUser\",\n    value: function registerUser(username, password) {\n      DataManager.getUsers(username, password);\n    }\n  }, {\n    key: \"getUsers\",\n    value: function getUsers() {\n      return DataManager.getAll(\"users\");\n    }\n  }, {\n    key: \"postUser\",\n    value: function postUser(newUser) {\n      return DataManager.postUser(newUser).then(function () {\n        return DataManager.getAll(\"users\");\n      });\n    }\n  }, {\n    key: \"checkForUser\",\n    value: function checkForUser(email, password) {\n      return DataManager.checkForUser(email, password);\n    } //symptoms\n\n  }, {\n    key: \"deleteSymptom\",\n    value: function deleteSymptom(id) {\n      DataManager.delete(id, \"symptoms\").then(function () {\n        DataManager.getAll(\"symptoms\");\n      });\n    }\n  }, {\n    key: \"getAllSymptoms\",\n    value: function getAllSymptoms() {\n      DataManager.getAll(\"symptoms\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(Login, Object.assign({}, props, {\n            checkForUser: _this3.checkForUser,\n            users: _this3.state.users,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), this.showNav(), React.createElement(Route, {\n        exact: true,\n        path: \"/register\",\n        render: function render(props) {\n          return React.createElement(Register, Object.assign({}, props, {\n            getUsers: _this3.getUsers,\n            postUser: _this3.postUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/home\",\n        render: function render(props) {\n          return React.createElement(Homepage, Object.assign({}, props, {\n            users: _this3.state.users,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/track\",\n        render: function render(props) {\n          return React.createElement(SymptomList, Object.assign({}, props, {\n            symptoms: _this3.state.symptoms,\n            addSymptom: _this3.addSymptom,\n            deleteSymptom: _this3.deleteSymptom,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/symptoms/new\",\n        render: function render(props) {\n          return React.createElement(NewSymptomForm, Object.assign({}, props, {\n            symptoms: _this3.state.symptoms,\n            addSymptom: _this3.addSymptom,\n            getAll: _this3.getAllSymptoms,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ApplicationViews;\n}(Component);\n\nexport { ApplicationViews as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/ApplicationViews.js"],"names":["React","Component","NavBar","Route","SymptomList","Login","Register","DataManager","Homepage","NewSymptomForm","ApplicationViews","state","users","symptoms","medications","appointments","notes","doctors","isAuthenticated","sessionStorage","getItem","addSymptom","newSymptom","postSymptom","then","getAll","allSymptoms","setState","newState","allUsers","allMedications","allAppointments","allNotes","allDoctors","console","log","username","password","getUsers","newUser","postUser","email","checkForUser","id","delete","props","showNav","deleteSymptom","getAllSymptoms"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport NavBar from \"./nav/NavBar\"\nimport { Route } from \"react-router-dom\"\n// import { Redirect } from \"react-router-dom\"\nimport SymptomList from \"./symptoms/SymptomList\"\nimport Login from \"./login/Login\"\nimport Register from \"./login/Register\"\nimport DataManager from \"../modules/DataManager\"\n// import TrackNavBar from \"./nav/TrackNavBar\"\nimport Homepage from \"./homepage/Homepage\"\nimport NewSymptomForm from \"./symptoms/NewSymptomForm\"\n\nexport default class ApplicationViews extends\n    Component {\n\n    state = {\n        users: [],\n        symptoms: [],\n        medications: [],\n        appointments: [],\n        notes: [],\n        doctors: []\n\n    }\n\n    componentDidMount() {\n        const newState = {}\n        DataManager.getAll(\"users\").then(allUsers => newState.users = allUsers)\n            .then(() => DataManager.getAll(\"symptoms\")).then(allSymptoms => newState.symptoms = allSymptoms)\n            .then(() => DataManager.getAll(\"medications\")).then(allMedications => newState.medications = allMedications)\n            .then(() => DataManager.getAll(\"appointments\")).then(allAppointments => newState.appointments = allAppointments)\n            .then(() => DataManager.getAll(\"notes\")).then(allNotes => newState.notes = allNotes)\n            .then(() => DataManager.getAll(\"doctors\")).then(allDoctors => newState.doctors = allDoctors)\n            .then(() => this.setState(newState))\n            .then(() => { console.log(\"COMPONENTDIDMOUNT:\", this.state) })\n    }\n\n\n\n\n    //authentication\n    isAuthenticated = () => sessionStorage.getItem(\"User\") !== null\n    showNav() {\n        if (this.isAuthenticated()) {\n            return <NavBar />\n        }\n    }\n\n    //login/registration\n    registerUser(username, password) {\n        DataManager.getUsers(username, password)\n    }\n    getUsers() {\n        return DataManager.getAll(\"users\")\n    }\n    postUser(newUser) {\n        return DataManager.postUser(newUser).then(() => DataManager.getAll(\"users\"))\n    }\n    checkForUser(email, password) {\n        return DataManager.checkForUser(email, password)\n    }\n    //symptoms\n    addSymptom = (newSymptom) => {\n        DataManager.postSymptom(newSymptom).then(() => {\n            DataManager.getAll(\"symptoms\")\n            .then(allSymptoms =>\n                this.setState({\n                  symptoms: allSymptoms\n                })\n              );\n        })\n    }\n    deleteSymptom(id) {\n        DataManager.delete(id, \"symptoms\").then(()=> {\n            DataManager.getAll(\"symptoms\")\n        })\n    }\n    getAllSymptoms() {\n        DataManager.getAll(\"symptoms\")\n    }\n\n    render() {\n        return (\n            <>\n                <Route exact path=\"/\" render={(props) => {\n                    return <Login {...props} checkForUser={this.checkForUser} users={this.state.users} />\n                }} />\n                {this.showNav()}\n                <Route exact path=\"/register\" render={(props) => {\n                    return <Register {...props} getUsers={this.getUsers}\n                        postUser={this.postUser} />\n                }} />\n                <Route exact path=\"/home\" render={(props) => {\n                    return <Homepage {...props} users={this.state.users} />\n                }} />\n                <Route exact path=\"/track\" render={(props) => {\n                    return <SymptomList {...props} symptoms={this.state.symptoms} addSymptom={this.addSymptom} deleteSymptom={this.deleteSymptom} />\n                }} />\n                <Route exact path=\"/symptoms/new\" render={props => {\n                    return <NewSymptomForm {...props} symptoms={this.state.symptoms} addSymptom={this.addSymptom} getAll={this.getAllSymptoms} />\n                }} />\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}