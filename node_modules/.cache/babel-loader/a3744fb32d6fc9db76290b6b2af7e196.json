{"ast":null,"code":"import _classCallCheck from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asiacarter/workspace/checkup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asiacarter/workspace/checkup/src/components/symptoms/TrackChoice.js\";\nimport React, { Component } from \"react\";\nimport \"./Symptoms.css\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar TrackChoice =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TrackChoice, _Component);\n\n  function TrackChoice() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TrackChoice);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TrackChoice)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      symptoms: [],\n      modal: false\n    };\n\n    _this.toggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.addSymptomToDatabase = function () {\n      _this.props.addTrackedSymptom();\n    };\n\n    _this.addSymptomSave = function () {\n      _this.props.history.push(\"/symptoms/\".concat(_this.state.symptoms, \"/new\"));\n\n      var user = Number(sessionStorage.getItem(\"User\"));\n      var newSymptomToAdd = {\n        name: _this.state.symptoms,\n        userId: user\n      };\n\n      _this.props.addTrackedSymptom(newSymptomToAdd);\n    };\n\n    _this.deleteSymptom = function (e) {\n      _this.props.deleteSymptom(e.target.parentNode.id);\n    };\n\n    return _this;\n  }\n\n  _createClass(TrackChoice, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"PROPROPRORPRO\", this.props.trackedSymptoms);\n\n      if (this.props.trackedSymptoms.length <= 0) {\n        return React.createElement(React.Fragment, null);\n      } else {\n        return React.createElement(React.Fragment, null, React.createElement(\"nav\", {\n          className: \"navbar fixed-top navbar-light light-blue flex-md-nowrap p-0 shadow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"nav nav-pulls nav-fill\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"nav-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"TRACK\")))), React.createElement(\"div\", {\n          className: \"symptom-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          className: \"symptom-question\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"What symptoms would you like to track?\"), React.createElement(\"div\", {\n          className: \"symptom-name-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"list-group my-list-group right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"list-group-item\",\n          id: \"nausea\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/symptoms/Nausea/new\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"nausea-h1\",\n          id: \"nausea\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Nausea\"))), React.createElement(\"div\", {\n          className: \"list-group-item\",\n          id: \"weight\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/symptoms/Weight/new\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"weight-h1\",\n          id: \"weight\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Weight\"))), React.createElement(\"div\", {\n          className: \"list-group-item\",\n          id: \"pain\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/symptoms/Pain/new\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"pain-h1\",\n          id: \"pain\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Pain\"))), this.props.trackedSymptoms.map(function (symptom) {\n          return React.createElement(\"div\", {\n            key: symptom.id,\n            className: \"list-group my-list-group right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"list-group-item\",\n            id: symptom.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/symptoms/\".concat(symptom.name, \"/new\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            className: \"nausea-h1\",\n            id: \"nausea\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, symptom.name)), React.createElement(\"button\", {\n            onClick: _this2.deleteSymptom,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, \"Delete\")));\n        }), React.createElement(\"div\", {\n          className: \"list-group-item\",\n          id: \"add\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"none\",\n          onClick: this.toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \" \", this.props.buttonLabel, React.createElement(\"h1\", {\n          className: \"add-h1\",\n          id: \"add\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"+\")), React.createElement(\"div\", {\n          className: \"centerModal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(Modal, {\n          isOpen: this.state.modal,\n          className: \"modal-sm\",\n          toggle: this.toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: this.toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"What symptom would you like to track?\"), React.createElement(ModalBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"symptom\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"Symptom\"), React.createElement(\"input\", {\n          type: \"text\",\n          id: \"symptoms\",\n          onChange: this.handleFieldChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }))), React.createElement(ModalFooter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          onClick: this.addSymptomSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Save\"), ' ', React.createElement(Button, {\n          color: \"secondary\",\n          onClick: this.toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Cancel\"))))))));\n      }\n    }\n  }]);\n\n  return TrackChoice;\n}(Component);\n\nexport { TrackChoice as default };","map":{"version":3,"sources":["/Users/asiacarter/workspace/checkup/src/components/symptoms/TrackChoice.js"],"names":["React","Component","Link","Button","Modal","ModalHeader","ModalBody","ModalFooter","TrackChoice","state","symptoms","modal","toggle","setState","prevState","handleFieldChange","evt","stateToChange","target","id","value","addSymptomToDatabase","props","addTrackedSymptom","addSymptomSave","history","push","user","Number","sessionStorage","getItem","newSymptomToAdd","name","userId","deleteSymptom","e","parentNode","console","log","trackedSymptoms","length","map","symptom","buttonLabel"],"mappings":"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","sourcesContent":["import React, { Component} from \"react\"\nimport \"./Symptoms.css\"\nimport {Link} from \"react-router-dom\"\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport default class TrackChoice extends Component {\n    state = {\n        symptoms: [],\n        modal: false\n    }\n\n    toggle= () => {\n        this.setState(prevState => ({\n          modal: !prevState.modal\n        }));\n      }\n      handleFieldChange = evt => {\n        const stateToChange = {};\n        stateToChange[evt.target.id] = evt.target.value;\n        this.setState(stateToChange);\n\n    }\n\n    addSymptomToDatabase = () => {\n        this.props.addTrackedSymptom()\n    }\n\n    addSymptomSave = () => {\n        this.props.history.push(`/symptoms/${this.state.symptoms}/new`)\n        let user = Number(sessionStorage.getItem(\"User\"))\n        let newSymptomToAdd = {\n            name: this.state.symptoms,\n            userId: user\n        }\n        this.props.addTrackedSymptom(newSymptomToAdd)\n    }\n\n\n    deleteSymptom = (e) => {\n        this.props.deleteSymptom(e.target.parentNode.id)\n    }\n\n    render() {\n        console.log(\"PROPROPRORPRO\",this.props.trackedSymptoms)\n        if(this.props.trackedSymptoms.length <= 0 ) {\n        return (\n            <>\n            </>\n\n        )\n    } else  {\n        return (\n            <>\n             <nav className=\"navbar fixed-top navbar-light light-blue flex-md-nowrap p-0 shadow\">\n                    <div className=\"container\">\n                        <ul className=\"nav nav-pulls nav-fill\">\n                            <li className=\"nav-item\">\n                                TRACK\n                            </li>\n                        </ul>\n                    </div>\n               </nav>\n            <div className=\"symptom-container\">\n            <h5 className=\"symptom-question\">What symptoms would you like to track?</h5>\n            <div className=\"symptom-name-container\">\n            </div></div>\n\n            <div className=\"container\">\n                <div className=\"list-group my-list-group right\">\n                    <div className=\"list-group-item\" id=\"nausea\">\n                        <Link to={\"/symptoms/Nausea/new\"}>\n                            <h1 className=\"nausea-h1\" id=\"nausea\">\n                                Nausea\n                            </h1>\n                        </Link>\n                    </div>\n                    <div className=\"list-group-item\" id=\"weight\">\n                    <Link to={\"/symptoms/Weight/new\"}>\n                            <h1 className=\"weight-h1\" id=\"weight\">\n                                Weight\n                            </h1>\n                        </Link>\n                    </div>\n                    <div className=\"list-group-item\" id=\"pain\">\n                    <Link to={\"/symptoms/Pain/new\"}>\n                            <h1 className=\"pain-h1\" id=\"pain\">\n                               Pain\n                            </h1>\n                        </Link>\n                    </div>\n\n                    {this.props.trackedSymptoms.map(symptom=>\n           (\n\n                 <div key={symptom.id} className=\"list-group my-list-group right\">\n                    <div className=\"list-group-item\" id={symptom.id}>\n                        <Link to={`/symptoms/${symptom.name}/new`}>\n                            <h1 className=\"nausea-h1\" id=\"nausea\">\n                                {symptom.name}\n                            </h1>\n                        </Link>\n                        <button onClick={this.deleteSymptom}>Delete</button>\n                    </div>\n                    </div>\n\n            ))\n\n    }\n                    <div className=\"list-group-item\" id=\"add\">\n                    <Button color=\"none\" onClick={this.toggle}> {this.props.buttonLabel}\n                             <h1 className=\"add-h1\" id=\"add\">\n                                +\n                            </h1>\n                        </Button>\n\n\n\n                        <div className=\"centerModal\">\n                <Modal isOpen={this.state.modal} className=\"modal-sm\" toggle={this.toggle} >\n                <ModalHeader toggle={this.toggle}>What symptom would you like to track?</ModalHeader>\n                <ModalBody >\n                <div>\n                        <label htmlFor=\"symptom\">Symptom</label>\n                        <input type=\"text\" id=\"symptoms\" onChange={this.handleFieldChange} />\n                </div>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={this.addSymptomSave}>Save</Button>{' '}\n                    <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                </ModalFooter>\n                </Modal>\n                </div>\n                    </div>\n                </div>\n                </div>\n\n        </>\n\n        )\n    }\n}\n}\n"]},"metadata":{},"sourceType":"module"}